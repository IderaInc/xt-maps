{"version":3,"sources":["webpack:///fusioncharts.berat.js","webpack:///webpack/bootstrap 960e8b2287cfe7d9baa7","webpack:///external \"FusionCharts\"","webpack:///./source/wrappers/fusioncharts.berat.js","webpack:///./source/maps/fusioncharts.berat.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","0","FusionCharts","317","_interopRequireDefault","obj","default","_FusionCharts","_FusionCharts2","_fusioncharts","_fusioncharts2","addDep","addFile","318","L","Q","CEN","MID","geodefinitions","revision","standaloneInit","baseWidth","baseHeight","baseScaleFactor","entities","01","outlines","label","shortLabel","labelPosition","labelAlignment","02","03","extension","type"],"mappings":"CAAS,SAAUA,SCInB,QAAAC,qBAAAC,UAGA,GAAAC,iBAAAD,UACA,MAAAC,kBAAAD,UAAAE,OAGA,IAAAC,QAAAF,iBAAAD,WACAI,EAAAJ,SACAK,GAAA,EACAH,WAUA,OANAJ,SAAAE,UAAAM,KAAAH,OAAAD,QAAAC,cAAAD,QAAAH,qBAGAI,OAAAE,GAAA,EAGAF,OAAAD,QAvBA,GAAAD,oBA4BAF,qBAAAQ,EAAAT,QAGAC,oBAAAS,EAAAP,iBAGAF,oBAAAU,EAAA,SAAAP,QAAAQ,KAAAC,QACAZ,oBAAAa,EAAAV,QAAAQ,OACAG,OAAAC,eAAAZ,QAAAQ,MACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,UAMAZ,oBAAAmB,EAAA,SAAAf,QACA,GAAAQ,QAAAR,eAAAgB,WACA,WAA2B,MAAAhB,QAAA,YAC3B,WAAiC,MAAAA,QAEjC,OADAJ,qBAAAU,EAAAE,OAAA,IAAAA,QACAA,QAIAZ,oBAAAa,EAAA,SAAAQ,OAAAC,UAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,OAAAC,WAGtDtB,oBAAAyB,EAAA,GAGAzB,wCAAA0B,EAAA,ODMMC,EACA,SAAUvB,OAAQD,SEpExBC,OAAAD,QAAAyB,cF0EMC,IACA,SAAUzB,OAAQD,QAASH,qBAEjC,YAWA,SAAS8B,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIX,WAAaW,KAAQC,UAAWD,KGxFzF,GAAAE,eAAAjC,oBAAA,GHkFIkC,eAAiBJ,uBAAuBG,eGjF5CE,cAAAnC,oBAAA,KHqFIoC,eAAiBN,uBAAuBK,cGnF5CD,gBAAA,WAAaG,OAAbD,eAAA,YACAF,eAAA,WAAaI,QAAQ,0BH2FfC,IACA,SAAUnC,OAAQD,QAASH,qBAEjC,YAGAG,SAAQiB,YAAa;;;;;;;;;AI3FrB,GACEoB,GAAI,IAEJC,EAAI,IAGJC,IAAM,SACNC,IAAM,SAGNC,iBACAjC,KAAQ,QACRkC,SAAY,GACZC,gBAAkB,EAClBC,UAAa,IACbC,WAAc,IACdC,gBAAmB,GACnBC,UACEC,MACEC,WAnBE,IAoBI,KAAM,IAAKZ,EAAG,KAAM,IAAK,KAAM,IAAKC,EAAG,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAMD,EAAG,IAAK,IAAKC,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,IAAKD,EAAG,GAAI,IAAK,GAAI,IAAKC,EAAG,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAMD,EAAG,IAAK,KAAMC,EAAG,IAAK,KAAM,IAAK,KAAMD,EAAG,IAAK,KAAMC,EAAG,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAMD,EAAG,IAAK,KAAMC,EAAG,IAAK,KAAM,IAAK,KAAMD,EAAG,IAAK,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAM,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,IAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAM,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAKD,EAAG,KAAM,IAAK,KAAM,IAAKC,EAAG,KAAM,IAAK,KAAM,IAAKA,EAAG,KAAM,IAAK,KAAM,IAlBl+H,MAoBAY,MAAS,QACTC,WAAc,KACdC,eAAkB,MAAO,OACzBC,gBAAmBd,IAAKC,MAE1Bc,MACEL,WA5BE,IA6BI,KAAM,IAAKX,EAAG,KAAM,IAAK,KAAM,IAAKD,EAAG,KAAM,IAAK,KAAM,IAAKC,EAAG,KAAM,IAAK,KAAM,GAAI,KAAM,GAAI,KAAM,GAAID,EAAG,KAAM,GAAIC,EAAG,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAKD,EAAG,KAAM,IAAK,KAAM,IAAK,KAAM,IAAKC,EAAG,KAAM,IAAK,KAAM,IAAKD,EAAG,IAAK,IAAKC,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKD,EAAG,IAAK,KAAMC,EAAG,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAMD,EAAG,KAAM,KAAMC,EAAG,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAKD,EAAG,KAAM,IAAK,KAAM,IAAKC,EAAG,KAAM,IAAK,KAAM,IA3BtoC,MA6BAY,MAAS,SACTC,WAAc,KACdC,eAAkB,MAAO,MACzBC,gBAAmBd,IAAKC,MAE1Be,MACEN,WArCE,IAspC9iH,MAsCAY,MAAS,UACTC,WAAc,KACdC,eAAkB,MAAO,KACzBC,gBAAmBd,IAAKC,QJyG9BxC,SAAQ,YInGNwD,UAAWf,eACXjC,KAAM,QACNiD,KAAM","file":"fusioncharts.berat.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 317);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports) {\n\nmodule.exports = FusionCharts;\n\n/***/ }),\n\n/***/ 317:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _FusionCharts = __webpack_require__(0);\n\nvar _FusionCharts2 = _interopRequireDefault(_FusionCharts);\n\nvar _fusioncharts = __webpack_require__(318);\n\nvar _fusioncharts2 = _interopRequireDefault(_fusioncharts);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n_FusionCharts2['default'].addDep(_fusioncharts2['default']);\n_FusionCharts2['default'].addFile('fusioncharts.berat.js');\n\n/***/ }),\n\n/***/ 318:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n/**!\n * @license FusionCharts JavaScript Library\n * Copyright FusionCharts Technologies LLP\n * License Information at <http://www.fusioncharts.com/license>\n *\n * @author FusionCharts Technologies LLP\n * @meta package_map_pack\n * @id fusionmaps.Berat.20.12-21-2012 09:20:12\n */\n\nvar M = 'M',\n    // SVG MoveTo\nL = 'L',\n    // SVG LineTo\nZ = 'Z',\n    // SVG ClosePath\nQ = 'Q',\n    // SVG Quadratic Beizer\nLFT = 'left',\n    RGT = 'right',\n    CEN = 'center',\n    MID = 'middle',\n    TOP = 'top',\n    BTM = 'bottom',\n    geodefinitions = [{\n  \"name\": \"Berat\",\n  \"revision\": 20,\n  \"standaloneInit\": true,\n  \"baseWidth\": 563,\n  \"baseHeight\": 538,\n  \"baseScaleFactor\": 10,\n  \"entities\": {\n    \"01\": {\n      \"outlines\": [[M, 2014, 339, L, 2014, 396, 1991, 442, Q, 1980, 461, 1980, 503, 1980, 546, 1959, 553, 2039, 641, 2153, 773, 2168, 790, 2266, 896, 2281, 912, 2316, 960, 2334, 982, 2336, 989, 2339, 1015, 2361, 1010, L, 2361, 1060, Q, 2351, 1063, 2342, 1080, 2331, 1100, 2328, 1104, 2295, 1126, 2283, 1136, 2221, 1211, 2176, 1264, 2144, 1308, 2128, 1327, 2099, 1356, 2014, 1460, L, 1863, 1642, Q, 1820, 1685, 1810, 1695, 1800, 1705, 1780, 1685, 1752, 1681, 1745, 1679, 1698, 1661, 1684, 1642, 1667, 1617, 1622, 1598, 1571, 1580, 1549, 1569, 1365, 1482, 1265, 1421, 1173, 1377, 1142, 1360, 1037, 1308, 1003, 1285, 906, 1237, 867, 1209, 861, 1205, 803, 1184, 767, 1171, 767, 1138, L, 767, 192, Q, 742, 205, 719, 236, 681, 289, 550, 402, 419, 514, 391, 545, 363, 576, 326, 614, 290, 651, 232, 707, 173, 764, 159, 784, 145, 804, 145, 804, 92, 849, 93, 854, L, 43, 884, 43, 926, Q, 223, 1272, 257, 1327, 264, 1354, 301, 1405, 335, 1452, 340, 1486, 343, 1508, 426, 1666, L, 505, 1823, Q, 561, 1942, 587, 1974, L, 587, 1985, Q, 664, 2126, 677, 2155, 703, 2218, 761, 2327, 784, 2377, 850, 2503, 861, 2530, 894, 2589, L, 914, 2628, Q, 921, 2640, 938, 2669, L, 938, 2689, Q, 1003, 2784, 1004, 2818, 1004, 2827, 1017, 2849, 1028, 2870, 1029, 2894, L, 1029, 2941, Q, 1028, 2952, 1045, 2972, 1049, 3028, 1045, 3070, 1042, 3095, 1055, 3114, 1072, 3135, 1073, 3145, 1075, 3175, 1073, 3240, 1075, 3250, 1094, 3270, 1108, 3285, 1101, 3310, L, 1101, 3384, Q, 1130, 3394, 1121, 3543, 1148, 3548, 1165, 3552, 1171, 3565, 1206, 3565, 1234, 3564, 1239, 3594, 1248, 3601, 1282, 3599, 1288, 3601, 1299, 3615, L, 1324, 3615, Q, 1350, 3613, 1359, 3628, 1369, 3646, 1393, 3646, 1406, 3646, 1425, 3664, 1427, 3667, 1468, 3671, 1475, 3671, 1488, 3690, 1491, 3693, 1509, 3692, 1525, 3692, 1528, 3695, 1534, 3699, 1541, 3711, 1548, 3716, 1584, 3716, 1588, 3715, 1597, 3726, 1604, 3738, 1619, 3739, 1652, 3739, 1658, 3750, 1663, 3762, 1694, 3762, 1719, 3759, 1716, 3787, L, 1735, 3785, 1779, 3786, 1779, 3807, Q, 1823, 3798, 1838, 3823, L, 1863, 3828, Q, 1884, 3827, 1891, 3841, 1898, 3855, 1922, 3854, 1945, 3854, 1950, 3863, 1953, 3875, 1959, 3876, L, 1980, 3876, Q, 1992, 3873, 2005, 3892, 2009, 3899, 2032, 3900, 2054, 3901, 2061, 3910, 2063, 3912, 2070, 3920, L, 2089, 3920, Q, 2116, 3923, 2121, 3927, 2142, 3945, 2146, 3945, 2164, 3942, 2177, 3957, 2186, 3971, 2204, 3971, L, 2242, 3971, Q, 2245, 3970, 2263, 3992, 2268, 3995, 2297, 3997, 2310, 4006, 2349, 4019, 2369, 4027, 2401, 4043, 2426, 4043, 2434, 4051, 2450, 4068, 2456, 4066, 2486, 4059, 2517, 4088, 2527, 4090, 2550, 4095, 2560, 4100, 2577, 4111, 2600, 4112, 2634, 4137, 2657, 4135, 2693, 4155, 2702, 4160, 2722, 4165, 2738, 4181, 2745, 4185, L, 2786, 4185, Q, 2795, 4194, 2795, 4203, L, 2817, 4203, Q, 2810, 4178, 2834, 4185, L, 2834, 4159, Q, 2856, 4154, 2851, 4139, 2871, 4139, 2874, 4138, 2879, 4134, 2878, 4118, 2894, 4110, 2899, 4092, 2915, 4092, 2928, 4064, 2941, 4049, 2953, 4042, 2950, 4037, 2951, 4035, 2952, 4023, 2963, 4013, 2974, 4003, 2985, 3995, 2995, 3979, 3001, 3975, L, 3018, 3960, Q, 3050, 3919, 3054, 3913, L, 3066, 3888, Q, 3067, 3879, 3086, 3870, L, 3085, 3851, 3107, 3851, 3112, 3802, Q, 3112, 3797, 3087, 3739, 3087, 3662, 3087, 3656, L, 3085, 3602, Q, 3062, 3586, 3062, 3566, 3064, 3482, 3062, 3443, 3037, 3421, 3040, 3402, 3037, 3365, 3040, 3337, 3042, 3303, 3028, 3283, 3013, 3261, 3013, 3242, L, 3017, 3200, 3017, 3136, Q, 2990, 3116, 2995, 3082, 3000, 3031, 2990, 3020, 2970, 3007, 2968, 2999, 2960, 2977, 2959, 2976, 2933, 2956, 2906, 2888, 2879, 2821, 2852, 2803, L, 2852, 2772, Q, 2900, 2772, 3003, 2756, 3038, 2756, 3080, 2743, 3117, 2731, 3154, 2736, 3203, 2740, 3237, 2723, 3271, 2705, 3311, 2710, 3377, 2717, 3397, 2702, L, 3408, 2687, Q, 3411, 2681, 3428, 2683, L, 3465, 2683, 3463, 2520, Q, 3483, 2452, 3485, 2430, L, 3485, 1538, Q, 3488, 1465, 3490, 1431, 3493, 1396, 3479, 1365, 3465, 1334, 3428, 1301, 3390, 1268, 3341, 1226, 3273, 1168, 2557, 562, 2361, 411, 2271, 325, 2137, 196, 2133, 194, 2067, 150, 2061, 140, 2060, 139, 2060, 139, L, 2060, 139, 2056, 163, Q, 2050, 187, 2039, 230, Q, 2027, 272, 2014, 339, Z]],\n      \"label\": \"Berat\",\n      \"shortLabel\": \"BR\",\n      \"labelPosition\": [198.3, 238.7],\n      \"labelAlignment\": [CEN, MID]\n    },\n    \"02\": {\n      \"outlines\": [[M, 2039, 230, Q, 2050, 187, 2056, 163, L, 2060, 139, 2060, 139, Q, 2056, 122, 2061, 82, 2061, 78, 2045, 37, L, 2020, 37, Q, 2021, 62, 1980, 62, 1934, 62, 1930, 68, 1915, 86, 1887, 88, 1844, 89, 1841, 99, 1838, 109, 1810, 116, 1769, 115, 1751, 116, 1749, 138, 1718, 137, 1665, 136, 1662, 144, 1659, 153, 1617, 154, 1575, 155, 1587, 158, 1596, 188, 1482, 182, L, 1479, 210, 1158, 210, 1110, 200, Q, 1089, 180, 1059, 186, L, 998, 186, Q, 847, 182, 802, 182, 784, 183, 767, 192, L, 767, 1138, Q, 767, 1171, 803, 1184, 861, 1205, 867, 1209, 906, 1237, 1003, 1285, 1037, 1308, 1142, 1360, 1173, 1377, 1265, 1421, 1365, 1482, 1549, 1569, 1571, 1580, 1622, 1598, 1667, 1617, 1684, 1642, 1698, 1661, 1745, 1679, 1752, 1681, 1780, 1685, 1800, 1705, 1810, 1695, 1820, 1685, 1863, 1642, L, 2014, 1460, Q, 2099, 1356, 2128, 1327, 2144, 1308, 2176, 1264, 2221, 1211, 2283, 1136, 2295, 1126, 2328, 1104, 2331, 1100, 2342, 1080, 2351, 1063, 2361, 1060, L, 2361, 1010, Q, 2339, 1015, 2336, 989, 2334, 982, 2316, 960, 2281, 912, 2266, 896, 2168, 790, 2153, 773, 2039, 641, 1959, 553, 1980, 546, 1980, 503, 1980, 461, 1991, 442, L, 2014, 396, 2014, 339, Q, 2027, 272, 2039, 230, Z]],\n      \"label\": \"Kuçovë\",\n      \"shortLabel\": \"KC\",\n      \"labelPosition\": [156.4, 86.8],\n      \"labelAlignment\": [CEN, MID]\n    },\n    \"03\": {\n      \"outlines\": [[M, 4460, 1773, Q, 4448, 1772, 4349, 1774, 4306, 1775, 4285, 1755, 4269, 1741, 4224, 1743, 4171, 1750, 4146, 1749, 4119, 1748, 4087, 1735, 4062, 1725, 4011, 1729, 3908, 1735, 3872, 1721, 3801, 1673, 3782, 1665, 3723, 1632, 3690, 1619, 3555, 1555, 3485, 1538, L, 3485, 2430, Q, 3483, 2452, 3463, 2520, L, 3465, 2683, 3428, 2683, Q, 3411, 2681, 3408, 2687, L, 3397, 2702, Q, 3377, 2717, 3311, 2710, 3271, 2705, 3237, 2723, 3203, 2740, 3154, 2736, 3117, 2731, 3080, 2743, 3038, 2756, 3003, 2756, 2900, 2772, 2852, 2772, L, 2852, 2803, Q, 2879, 2821, 2906, 2888, 2933, 2956, 2959, 2976, 2960, 2977, 2968, 2999, 2970, 3007, 2990, 3020, 3000, 3031, 2995, 3082, 2990, 3116, 3017, 3136, L, 3017, 3200, 3013, 3242, Q, 3013, 3261, 3028, 3283, 3042, 3303, 3040, 3337, 3037, 3365, 3040, 3402, 3037, 3421, 3062, 3443, 3064, 3482, 3062, 3566, 3062, 3586, 3085, 3602, L, 3087, 3656, Q, 3087, 3662, 3087, 3739, 3112, 3797, 3112, 3802, L, 3107, 3851, 3085, 3851, 3086, 3870, Q, 3067, 3879, 3066, 3888, L, 3054, 3913, Q, 3050, 3919, 3018, 3960, L, 3001, 3975, Q, 2995, 3979, 2985, 3995, 2974, 4003, 2963, 4013, 2952, 4023, 2951, 4035, 2950, 4037, 2953, 4042, 2965, 4061, 3027, 4119, 3060, 4152, 3117, 4202, 3204, 4265, 3256, 4326, 3272, 4346, 3318, 4394, 3341, 4423, 3394, 4469, 3417, 4497, 3421, 4503, 3429, 4520, 3446, 4540, 3481, 4579, 3519, 4614, 3544, 4638, 3588, 4687, 3614, 4707, 3622, 4725, 3629, 4739, 3646, 4762, L, 3646, 4772, 3717, 4843, Q, 3729, 4856, 3750, 4878, 3783, 4906, 3785, 4911, 3799, 4941, 3844, 4988, 3867, 5013, 3909, 5058, 3988, 5149, 4040, 5206, 4092, 5262, 4104, 5280, 4116, 5297, 4135, 5311, 4141, 5313, 4144, 5326, 4157, 5322, 4157, 5342, L, 4167, 5342, 4169, 5327, 4191, 5327, Q, 4200, 5326, 4202, 5316, L, 4213, 5305, Q, 4216, 5302, 4230, 5300, 4230, 5288, 4239, 5286, 4257, 5283, 4258, 5282, 4279, 5267, 4282, 5257, 4283, 5253, 4295, 5245, 4306, 5231, 4312, 5231, 4333, 5230, 4342, 5217, 4348, 5216, 4374, 5197, 4377, 5197, 4390, 5168, 4410, 5168, 4420, 5157, 4424, 5153, 4429, 5146, L, 4446, 5142, Q, 4461, 5139, 4466, 5119, 4470, 5114, 4483, 5114, 4483, 5105, 4489, 5095, 4492, 5091, 4521, 5085, 4523, 5075, 4547, 5067, 4559, 5061, 4569, 5047, 4589, 5036, 4588, 5025, 4590, 5025, 4603, 5022, L, 4607, 5001, 4632, 5001, 4632, 4959, Q, 4611, 4933, 4607, 4901, 4608, 4861, 4607, 4842, 4601, 4756, 4582, 4746, L, 4585, 4732, 4585, 4685, Q, 4582, 4670, 4582, 4660, 4583, 4650, 4592, 4645, 4600, 4641, 4618, 4629, 4640, 4621, 4674, 4579, 4684, 4570, 4742, 4506, 4776, 4471, 4813, 4462, L, 4813, 4436, 4883, 4436, Q, 4887, 4442, 4887, 4459, L, 4935, 4459, Q, 4943, 4458, 4950, 4471, 4957, 4484, 4973, 4484, 5000, 4484, 5017, 4498, 5032, 4513, 5052, 4514, 5101, 4514, 5104, 4515, 5124, 4522, 5142, 4536, 5153, 4534, 5177, 4554, 5186, 4561, 5231, 4559, 5239, 4560, 5265, 4582, 5310, 4586, 5311, 4587, 5336, 4609, 5390, 4618, 5399, 4624, 5432, 4627, 5448, 4628, 5471, 4646, 5483, 4656, 5516, 4652, L, 5532, 4669, 5558, 4669, Q, 5587, 4669, 5590, 4658, 5594, 3680, 5586, 3268, 5585, 3235, 5553, 3228, 5522, 3220, 5510, 3212, 5494, 3202, 5486, 3202, 5477, 3201, 5460, 3193, 5443, 3184, 5414, 3179, 5379, 3154, 5362, 3153, 5332, 3150, 5303, 3132, 5260, 3119, 5247, 3112, 5213, 3108, 5197, 3096, 5152, 3083, 5144, 3076, 5133, 3068, 5121, 3031, 5105, 3006, 5098, 2974, 5061, 2916, 5048, 2889, 5018, 2808, 4998, 2779, 4986, 2763, 4951, 2687, 4922, 2641, 4907, 2594, 4893, 2585, 4882, 2556, 4871, 2524, 4863, 2516, 4845, 2496, 4811, 2438, 4756, 2311, 4724, 2251, 4665, 2146, 4633, 2092, 4580, 1995, 4560, 1923, 4520, 1871, 4511, 1848, 4502, 1825, 4496, 1820, 4489, 1814, 4487, 1806, 4482, 1792, 4473, 1789, Q, 4466, 1780, 4460, 1773, Z]],\n      \"label\": \"Skrapar\",\n      \"shortLabel\": \"SK\",\n      \"labelPosition\": [422.1, 344],\n      \"labelAlignment\": [CEN, MID]\n    }\n  }\n}];\n\nexports['default'] = {\n  extension: geodefinitions,\n  name: 'berat',\n  type: 'maps'\n};\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// fusioncharts.berat.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 317);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 960e8b2287cfe7d9baa7","module.exports = FusionCharts;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"FusionCharts\"\n// module id = 0\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297","import FusionCharts from 'FusionCharts';\nimport berat from '../maps/fusioncharts.berat';\n\nFusionCharts.addDep(berat);\nFusionCharts.addFile('fusioncharts.berat.js');\n\n\n// WEBPACK FOOTER //\n// ./source/wrappers/fusioncharts.berat.js","/**!\n * @license FusionCharts JavaScript Library\n * Copyright FusionCharts Technologies LLP\n * License Information at <http://www.fusioncharts.com/license>\n *\n * @author FusionCharts Technologies LLP\n * @meta package_map_pack\n * @id fusionmaps.Berat.20.12-21-2012 09:20:12\n */\n\nlet M = 'M', // SVG MoveTo\n  L = 'L', // SVG LineTo\n  Z = 'Z', // SVG ClosePath\n  Q = 'Q', // SVG Quadratic Beizer\n  LFT = 'left',\n  RGT = 'right',\n  CEN = 'center',\n  MID = 'middle',\n  TOP = 'top',\n  BTM = 'bottom',\n  geodefinitions = [{\n  \"name\": \"Berat\",\n  \"revision\": 20,\n  \"standaloneInit\": true,\n  \"baseWidth\": 563,\n  \"baseHeight\": 538,\n  \"baseScaleFactor\": 10,\n  \"entities\": {\n    \"01\": {\n      \"outlines\": [\n        [M, 2014, 339, L, 2014, 396, 1991, 442, Q, 1980, 461, 1980, 503, 1980, 546, 1959, 553, 2039, 641, 2153, 773, 2168, 790, 2266, 896, 2281, 912, 2316, 960, 2334, 982, 2336, 989, 2339, 1015, 2361, 1010, L, 2361, 1060, Q, 2351, 1063, 2342, 1080, 2331, 1100, 2328, 1104, 2295, 1126, 2283, 1136, 2221, 1211, 2176, 1264, 2144, 1308, 2128, 1327, 2099, 1356, 2014, 1460, L, 1863, 1642, Q, 1820, 1685, 1810, 1695, 1800, 1705, 1780, 1685, 1752, 1681, 1745, 1679, 1698, 1661, 1684, 1642, 1667, 1617, 1622, 1598, 1571, 1580, 1549, 1569, 1365, 1482, 1265, 1421, 1173, 1377, 1142, 1360, 1037, 1308, 1003, 1285, 906, 1237, 867, 1209, 861, 1205, 803, 1184, 767, 1171, 767, 1138, L, 767, 192, Q, 742, 205, 719, 236, 681, 289, 550, 402, 419, 514, 391, 545, 363, 576, 326, 614, 290, 651, 232, 707, 173, 764, 159, 784, 145, 804, 145, 804, 92, 849, 93, 854, L, 43, 884, 43, 926, Q, 223, 1272, 257, 1327, 264, 1354, 301, 1405, 335, 1452, 340, 1486, 343, 1508, 426, 1666, L, 505, 1823, Q, 561, 1942, 587, 1974, L, 587, 1985, Q, 664, 2126, 677, 2155, 703, 2218, 761, 2327, 784, 2377, 850, 2503, 861, 2530, 894, 2589, L, 914, 2628, Q, 921, 2640, 938, 2669, L, 938, 2689, Q, 1003, 2784, 1004, 2818, 1004, 2827, 1017, 2849, 1028, 2870, 1029, 2894, L, 1029, 2941, Q, 1028, 2952, 1045, 2972, 1049, 3028, 1045, 3070, 1042, 3095, 1055, 3114, 1072, 3135, 1073, 3145, 1075, 3175, 1073, 3240, 1075, 3250, 1094, 3270, 1108, 3285, 1101, 3310, L, 1101, 3384, Q, 1130, 3394, 1121, 3543, 1148, 3548, 1165, 3552, 1171, 3565, 1206, 3565, 1234, 3564, 1239, 3594, 1248, 3601, 1282, 3599, 1288, 3601, 1299, 3615, L, 1324, 3615, Q, 1350, 3613, 1359, 3628, 1369, 3646, 1393, 3646, 1406, 3646, 1425, 3664, 1427, 3667, 1468, 3671, 1475, 3671, 1488, 3690, 1491, 3693, 1509, 3692, 1525, 3692, 1528, 3695, 1534, 3699, 1541, 3711, 1548, 3716, 1584, 3716, 1588, 3715, 1597, 3726, 1604, 3738, 1619, 3739, 1652, 3739, 1658, 3750, 1663, 3762, 1694, 3762, 1719, 3759, 1716, 3787, L, 1735, 3785, 1779, 3786, 1779, 3807, Q, 1823, 3798, 1838, 3823, L, 1863, 3828, Q, 1884, 3827, 1891, 3841, 1898, 3855, 1922, 3854, 1945, 3854, 1950, 3863, 1953, 3875, 1959, 3876, L, 1980, 3876, Q, 1992, 3873, 2005, 3892, 2009, 3899, 2032, 3900, 2054, 3901, 2061, 3910, 2063, 3912, 2070, 3920, L, 2089, 3920, Q, 2116, 3923, 2121, 3927, 2142, 3945, 2146, 3945, 2164, 3942, 2177, 3957, 2186, 3971, 2204, 3971, L, 2242, 3971, Q, 2245, 3970, 2263, 3992, 2268, 3995, 2297, 3997, 2310, 4006, 2349, 4019, 2369, 4027, 2401, 4043, 2426, 4043, 2434, 4051, 2450, 4068, 2456, 4066, 2486, 4059, 2517, 4088, 2527, 4090, 2550, 4095, 2560, 4100, 2577, 4111, 2600, 4112, 2634, 4137, 2657, 4135, 2693, 4155, 2702, 4160, 2722, 4165, 2738, 4181, 2745, 4185, L, 2786, 4185, Q, 2795, 4194, 2795, 4203, L, 2817, 4203, Q, 2810, 4178, 2834, 4185, L, 2834, 4159, Q, 2856, 4154, 2851, 4139, 2871, 4139, 2874, 4138, 2879, 4134, 2878, 4118, 2894, 4110, 2899, 4092, 2915, 4092, 2928, 4064, 2941, 4049, 2953, 4042, 2950, 4037, 2951, 4035, 2952, 4023, 2963, 4013, 2974, 4003, 2985, 3995, 2995, 3979, 3001, 3975, L, 3018, 3960, Q, 3050, 3919, 3054, 3913, L, 3066, 3888, Q, 3067, 3879, 3086, 3870, L, 3085, 3851, 3107, 3851, 3112, 3802, Q, 3112, 3797, 3087, 3739, 3087, 3662, 3087, 3656, L, 3085, 3602, Q, 3062, 3586, 3062, 3566, 3064, 3482, 3062, 3443, 3037, 3421, 3040, 3402, 3037, 3365, 3040, 3337, 3042, 3303, 3028, 3283, 3013, 3261, 3013, 3242, L, 3017, 3200, 3017, 3136, Q, 2990, 3116, 2995, 3082, 3000, 3031, 2990, 3020, 2970, 3007, 2968, 2999, 2960, 2977, 2959, 2976, 2933, 2956, 2906, 2888, 2879, 2821, 2852, 2803, L, 2852, 2772, Q, 2900, 2772, 3003, 2756, 3038, 2756, 3080, 2743, 3117, 2731, 3154, 2736, 3203, 2740, 3237, 2723, 3271, 2705, 3311, 2710, 3377, 2717, 3397, 2702, L, 3408, 2687, Q, 3411, 2681, 3428, 2683, L, 3465, 2683, 3463, 2520, Q, 3483, 2452, 3485, 2430, L, 3485, 1538, Q, 3488, 1465, 3490, 1431, 3493, 1396, 3479, 1365, 3465, 1334, 3428, 1301, 3390, 1268, 3341, 1226, 3273, 1168, 2557, 562, 2361, 411, 2271, 325, 2137, 196, 2133, 194, 2067, 150, 2061, 140, 2060, 139, 2060, 139, L, 2060, 139, 2056, 163, Q, 2050, 187, 2039, 230, Q, 2027, 272, 2014, 339, Z]\n      ],\n      \"label\": \"Berat\",\n      \"shortLabel\": \"BR\",\n      \"labelPosition\": [198.3, 238.7],\n      \"labelAlignment\": [CEN, MID]\n    },\n    \"02\": {\n      \"outlines\": [\n        [M, 2039, 230, Q, 2050, 187, 2056, 163, L, 2060, 139, 2060, 139, Q, 2056, 122, 2061, 82, 2061, 78, 2045, 37, L, 2020, 37, Q, 2021, 62, 1980, 62, 1934, 62, 1930, 68, 1915, 86, 1887, 88, 1844, 89, 1841, 99, 1838, 109, 1810, 116, 1769, 115, 1751, 116, 1749, 138, 1718, 137, 1665, 136, 1662, 144, 1659, 153, 1617, 154, 1575, 155, 1587, 158, 1596, 188, 1482, 182, L, 1479, 210, 1158, 210, 1110, 200, Q, 1089, 180, 1059, 186, L, 998, 186, Q, 847, 182, 802, 182, 784, 183, 767, 192, L, 767, 1138, Q, 767, 1171, 803, 1184, 861, 1205, 867, 1209, 906, 1237, 1003, 1285, 1037, 1308, 1142, 1360, 1173, 1377, 1265, 1421, 1365, 1482, 1549, 1569, 1571, 1580, 1622, 1598, 1667, 1617, 1684, 1642, 1698, 1661, 1745, 1679, 1752, 1681, 1780, 1685, 1800, 1705, 1810, 1695, 1820, 1685, 1863, 1642, L, 2014, 1460, Q, 2099, 1356, 2128, 1327, 2144, 1308, 2176, 1264, 2221, 1211, 2283, 1136, 2295, 1126, 2328, 1104, 2331, 1100, 2342, 1080, 2351, 1063, 2361, 1060, L, 2361, 1010, Q, 2339, 1015, 2336, 989, 2334, 982, 2316, 960, 2281, 912, 2266, 896, 2168, 790, 2153, 773, 2039, 641, 1959, 553, 1980, 546, 1980, 503, 1980, 461, 1991, 442, L, 2014, 396, 2014, 339, Q, 2027, 272, 2039, 230, Z]\n      ],\n      \"label\": \"Kuçovë\",\n      \"shortLabel\": \"KC\",\n      \"labelPosition\": [156.4, 86.8],\n      \"labelAlignment\": [CEN, MID]\n    },\n    \"03\": {\n      \"outlines\": [\n        [M, 4460, 1773, Q, 4448, 1772, 4349, 1774, 4306, 1775, 4285, 1755, 4269, 1741, 4224, 1743, 4171, 1750, 4146, 1749, 4119, 1748, 4087, 1735, 4062, 1725, 4011, 1729, 3908, 1735, 3872, 1721, 3801, 1673, 3782, 1665, 3723, 1632, 3690, 1619, 3555, 1555, 3485, 1538, L, 3485, 2430, Q, 3483, 2452, 3463, 2520, L, 3465, 2683, 3428, 2683, Q, 3411, 2681, 3408, 2687, L, 3397, 2702, Q, 3377, 2717, 3311, 2710, 3271, 2705, 3237, 2723, 3203, 2740, 3154, 2736, 3117, 2731, 3080, 2743, 3038, 2756, 3003, 2756, 2900, 2772, 2852, 2772, L, 2852, 2803, Q, 2879, 2821, 2906, 2888, 2933, 2956, 2959, 2976, 2960, 2977, 2968, 2999, 2970, 3007, 2990, 3020, 3000, 3031, 2995, 3082, 2990, 3116, 3017, 3136, L, 3017, 3200, 3013, 3242, Q, 3013, 3261, 3028, 3283, 3042, 3303, 3040, 3337, 3037, 3365, 3040, 3402, 3037, 3421, 3062, 3443, 3064, 3482, 3062, 3566, 3062, 3586, 3085, 3602, L, 3087, 3656, Q, 3087, 3662, 3087, 3739, 3112, 3797, 3112, 3802, L, 3107, 3851, 3085, 3851, 3086, 3870, Q, 3067, 3879, 3066, 3888, L, 3054, 3913, Q, 3050, 3919, 3018, 3960, L, 3001, 3975, Q, 2995, 3979, 2985, 3995, 2974, 4003, 2963, 4013, 2952, 4023, 2951, 4035, 2950, 4037, 2953, 4042, 2965, 4061, 3027, 4119, 3060, 4152, 3117, 4202, 3204, 4265, 3256, 4326, 3272, 4346, 3318, 4394, 3341, 4423, 3394, 4469, 3417, 4497, 3421, 4503, 3429, 4520, 3446, 4540, 3481, 4579, 3519, 4614, 3544, 4638, 3588, 4687, 3614, 4707, 3622, 4725, 3629, 4739, 3646, 4762, L, 3646, 4772, 3717, 4843, Q, 3729, 4856, 3750, 4878, 3783, 4906, 3785, 4911, 3799, 4941, 3844, 4988, 3867, 5013, 3909, 5058, 3988, 5149, 4040, 5206, 4092, 5262, 4104, 5280, 4116, 5297, 4135, 5311, 4141, 5313, 4144, 5326, 4157, 5322, 4157, 5342, L, 4167, 5342, 4169, 5327, 4191, 5327, Q, 4200, 5326, 4202, 5316, L, 4213, 5305, Q, 4216, 5302, 4230, 5300, 4230, 5288, 4239, 5286, 4257, 5283, 4258, 5282, 4279, 5267, 4282, 5257, 4283, 5253, 4295, 5245, 4306, 5231, 4312, 5231, 4333, 5230, 4342, 5217, 4348, 5216, 4374, 5197, 4377, 5197, 4390, 5168, 4410, 5168, 4420, 5157, 4424, 5153, 4429, 5146, L, 4446, 5142, Q, 4461, 5139, 4466, 5119, 4470, 5114, 4483, 5114, 4483, 5105, 4489, 5095, 4492, 5091, 4521, 5085, 4523, 5075, 4547, 5067, 4559, 5061, 4569, 5047, 4589, 5036, 4588, 5025, 4590, 5025, 4603, 5022, L, 4607, 5001, 4632, 5001, 4632, 4959, Q, 4611, 4933, 4607, 4901, 4608, 4861, 4607, 4842, 4601, 4756, 4582, 4746, L, 4585, 4732, 4585, 4685, Q, 4582, 4670, 4582, 4660, 4583, 4650, 4592, 4645, 4600, 4641, 4618, 4629, 4640, 4621, 4674, 4579, 4684, 4570, 4742, 4506, 4776, 4471, 4813, 4462, L, 4813, 4436, 4883, 4436, Q, 4887, 4442, 4887, 4459, L, 4935, 4459, Q, 4943, 4458, 4950, 4471, 4957, 4484, 4973, 4484, 5000, 4484, 5017, 4498, 5032, 4513, 5052, 4514, 5101, 4514, 5104, 4515, 5124, 4522, 5142, 4536, 5153, 4534, 5177, 4554, 5186, 4561, 5231, 4559, 5239, 4560, 5265, 4582, 5310, 4586, 5311, 4587, 5336, 4609, 5390, 4618, 5399, 4624, 5432, 4627, 5448, 4628, 5471, 4646, 5483, 4656, 5516, 4652, L, 5532, 4669, 5558, 4669, Q, 5587, 4669, 5590, 4658, 5594, 3680, 5586, 3268, 5585, 3235, 5553, 3228, 5522, 3220, 5510, 3212, 5494, 3202, 5486, 3202, 5477, 3201, 5460, 3193, 5443, 3184, 5414, 3179, 5379, 3154, 5362, 3153, 5332, 3150, 5303, 3132, 5260, 3119, 5247, 3112, 5213, 3108, 5197, 3096, 5152, 3083, 5144, 3076, 5133, 3068, 5121, 3031, 5105, 3006, 5098, 2974, 5061, 2916, 5048, 2889, 5018, 2808, 4998, 2779, 4986, 2763, 4951, 2687, 4922, 2641, 4907, 2594, 4893, 2585, 4882, 2556, 4871, 2524, 4863, 2516, 4845, 2496, 4811, 2438, 4756, 2311, 4724, 2251, 4665, 2146, 4633, 2092, 4580, 1995, 4560, 1923, 4520, 1871, 4511, 1848, 4502, 1825, 4496, 1820, 4489, 1814, 4487, 1806, 4482, 1792, 4473, 1789, Q, 4466, 1780, 4460, 1773, Z]\n      ],\n      \"label\": \"Skrapar\",\n      \"shortLabel\": \"SK\",\n      \"labelPosition\": [422.1, 344],\n      \"labelAlignment\": [CEN, MID]\n    }\n  }\n}];\n\nexport default {\n  extension: geodefinitions,\n  name: 'berat',\n  type: 'maps'\n};\n\n\n// WEBPACK FOOTER //\n// ./source/maps/fusioncharts.berat.js"],"sourceRoot":""}