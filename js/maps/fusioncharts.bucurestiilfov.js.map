{"version":3,"sources":["webpack:///fusioncharts.bucurestiilfov.js","webpack:///webpack/bootstrap 5cc9f3a4c32fe32be5ef","webpack:///external \"FusionCharts\"","webpack:///./source/wrappers/fusioncharts.bucurestiilfov.js","webpack:///./source/maps/fusioncharts.bucurestiilfov.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","0","FusionCharts","383","_interopRequireDefault","obj","default","_FusionCharts","_FusionCharts2","_fusioncharts","_fusioncharts2","addDep","addFile","384","L","Q","geodefinitions","revision","standaloneInit","baseWidth","baseHeight","baseScaleFactor","entities","RO.BI","outlines","label","shortLabel","labelPosition","labelAlignment","RO.IF","extension","type"],"mappings":"CAAS,SAAUA,SCInB,QAAAC,qBAAAC,UAGA,GAAAC,iBAAAD,UACA,MAAAC,kBAAAD,UAAAE,OAGA,IAAAC,QAAAF,iBAAAD,WACAI,EAAAJ,SACAK,GAAA,EACAH,WAUA,OANAJ,SAAAE,UAAAM,KAAAH,OAAAD,QAAAC,cAAAD,QAAAH,qBAGAI,OAAAE,GAAA,EAGAF,OAAAD,QAvBA,GAAAD,oBA4BAF,qBAAAQ,EAAAT,QAGAC,oBAAAS,EAAAP,iBAGAF,oBAAAU,EAAA,SAAAP,QAAAQ,KAAAC,QACAZ,oBAAAa,EAAAV,QAAAQ,OACAG,OAAAC,eAAAZ,QAAAQ,MACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,UAMAZ,oBAAAmB,EAAA,SAAAf,QACA,GAAAQ,QAAAR,eAAAgB,WACA,WAA2B,MAAAhB,QAAA,YAC3B,WAAiC,MAAAA,QAEjC,OADAJ,qBAAAU,EAAAE,OAAA,IAAAA,QACAA,QAIAZ,oBAAAa,EAAA,SAAAQ,OAAAC,UAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,OAAAC,WAGtDtB,oBAAAyB,EAAA,GAGAzB,wCAAA0B,EAAA,ODMMC,EACA,SAAUvB,OAAQD,SEpExBC,OAAAD,QAAAyB,cF0EMC,IACA,SAAUzB,OAAQD,QAASH,qBAEjC,YAWA,SAAS8B,wBAAuBC,KAAO,MAAOA,MAAOA,IAAIX,WAAaW,KAAQC,UAAWD,KGxFzF,GAAAE,eAAAjC,oBAAA,GHkFIkC,eAAiBJ,uBAAuBG,eGjF5CE,cAAAnC,oBAAA,KHqFIoC,eAAiBN,uBAAuBK,cGnF5CD,gBAAA,WAAaG,OAAbD,eAAA,YACAF,eAAA,WAAaI,QAAQ,mCH2FfC,IACA,SAAUnC,OAAQD,QAASH,qBAEjC,YAGAG,SAAQiB,YAAa;;;;;;;;;AI3FrB,GACEoB,GAAI,IAEJC,EAAI,IAOJC,iBACA/B,KAAQ,iBACRgC,SAAY,GACZC,gBAAkB,EAClBC,UAAa,IACbC,WAAc,IACdC,gBAAmB,GACnBC,UACEC,SACEC,WAnBE,IAolBxrF,MAoBAU,MAAS,YACTC,WAAc,KACdC,eAAkB,KAAM,IACxBC,gBAnBE,SACA,WAojyJ,IAFE,IA6ByyJ,IAAK,IAAKA,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,IAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKD,EAAG,IAAK,IAAKC,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKD,EAAG,IAAK,IAAKC,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAKA,EAAG,IAAK,IAAK,IAAK,IA3B79O,MA6BAU,MAAS,QACTC,WAAc,KACdC,eAAkB,KAAM,IACxBC,gBA5BE,SACA,aJsIRnD,SAAQ,YIrGNqD,UAAWd,eACX/B,KAAM,iBACN8C,KAAM","file":"fusioncharts.bucurestiilfov.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 383);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports) {\n\nmodule.exports = FusionCharts;\n\n/***/ }),\n\n/***/ 383:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _FusionCharts = __webpack_require__(0);\n\nvar _FusionCharts2 = _interopRequireDefault(_FusionCharts);\n\nvar _fusioncharts = __webpack_require__(384);\n\nvar _fusioncharts2 = _interopRequireDefault(_fusioncharts);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n_FusionCharts2['default'].addDep(_fusioncharts2['default']);\n_FusionCharts2['default'].addFile('fusioncharts.bucurestiilfov.js');\n\n/***/ }),\n\n/***/ 384:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n/**!\n * @license FusionCharts JavaScript Library\n * Copyright FusionCharts Technologies LLP\n * License Information at <http://www.fusioncharts.com/license>\n *\n * @author FusionCharts Technologies LLP\n * @meta package_map_pack\n * @id fusionmaps.BucurestiIlfov.20.12-21-2012 11:40:52\n */\n\nvar M = 'M',\n    // SVG MoveTo\nL = 'L',\n    // SVG LineTo\nZ = 'Z',\n    // SVG ClosePath\nQ = 'Q',\n    // SVG Quadratic Beizer\nLFT = 'left',\n    RGT = 'right',\n    CEN = 'center',\n    MID = 'middle',\n    TOP = 'top',\n    BTM = 'bottom',\n    geodefinitions = [{\n  \"name\": \"BucurestiIlfov\",\n  \"revision\": 20,\n  \"standaloneInit\": true,\n  \"baseWidth\": 110,\n  \"baseHeight\": 133,\n  \"baseScaleFactor\": 10,\n  \"entities\": {\n    \"RO.BI\": {\n      \"outlines\": [[M, 653, 746, Q, 652, 742, 652, 739, 651, 738, 650, 738, 635, 737, 619, 737, 599, 737, 579, 737, 579, 737, 577, 737, 572, 736, 573, 733, 573, 731, 572, 730, 571, 729, 568, 728, 567, 727, 566, 727, 546, 723, 526, 724, 521, 724, 517, 725, 515, 725, 513, 725, 492, 726, 471, 725, 460, 725, 455, 731, 455, 732, 454, 733, 450, 740, 438, 738, 426, 736, 420, 739, 418, 739, 417, 740, 411, 745, 406, 750, 405, 752, 403, 753, 397, 757, 392, 762, 387, 765, 388, 773, 389, 776, 388, 779, 387, 784, 383, 787, 379, 789, 380, 795, 380, 805, 385, 810, 386, 812, 386, 812, 389, 818, 394, 820, 395, 820, 395, 821, 399, 828, 405, 834, 411, 840, 418, 846, 419, 847, 419, 848, 420, 860, 420, 872, L, 420, 874, Q, 385, 876, 351, 876, 349, 876, 348, 877, 343, 882, 338, 888, 337, 889, 336, 889, 322, 889, 307, 890, 305, 889, 303, 891, 298, 894, 293, 898, L, 293, 898, Q, 289, 902, 293, 908, 295, 911, 299, 914, 300, 915, 301, 916, 303, 916, 305, 918, 308, 919, 312, 921, 313, 922, 314, 922, 322, 924, 327, 930, 328, 931, 329, 932, 331, 938, 336, 941, 341, 943, 343, 947, 344, 949, 345, 951, 351, 956, 358, 963, 359, 964, 361, 965, 368, 976, 374, 989, 375, 990, 375, 992, 376, 997, 380, 1000, 382, 1001, 382, 1002, 388, 1006, 392, 1009, 393, 1011, 393, 1011, 394, 1016, 396, 1020, 399, 1028, 407, 1032, 408, 1032, 409, 1034, 411, 1041, 416, 1049, 417, 1050, 417, 1051, 418, 1053, 419, 1055, 421, 1058, 423, 1062, 423, 1065, 424, 1067, 430, 1073, 436, 1080, 437, 1081, 437, 1082, 438, 1087, 442, 1091, 444, 1092, 446, 1094, 449, 1096, 451, 1096, 458, 1099, 460, 1096, 465, 1090, 473, 1086, 474, 1086, 475, 1085, 488, 1084, 500, 1085, 509, 1084, 519, 1084, 526, 1083, 531, 1080, 532, 1079, 535, 1077, 542, 1075, 553, 1071, 556, 1070, 560, 1070, 573, 1071, 581, 1065, 583, 1063, 584, 1062, 586, 1060, 588, 1058, 590, 1057, 593, 1057, 598, 1057, 601, 1054, 602, 1052, 604, 1052, 606, 1050, 607, 1048, 610, 1043, 615, 1043, 627, 1042, 639, 1042, 641, 1042, 643, 1042, 645, 1040, 647, 1038, 648, 1037, 648, 1036, 650, 999, 650, 963, 650, 960, 651, 959, 652, 955, 653, 949, 652, 947, 654, 946, 656, 944, 657, 941, 660, 933, 672, 934, 675, 934, 677, 934, 678, 933, 679, 932, 681, 932, 682, 930, 688, 924, 694, 920, 700, 916, 708, 913, 710, 913, 711, 911, 717, 906, 720, 903, 722, 901, 724, 899, 725, 898, 727, 896, 733, 891, 741, 890, 743, 889, 743, 887, 745, 881, 746, 874, 747, 866, 739, 867, 728, 869, 721, 863, 718, 861, 718, 855, 718, 853, 716, 853, 714, 852, 712, 851, 711, 850, 710, 848, 707, 845, 701, 845, 693, 846, 688, 843, 685, 841, 679, 841, 677, 840, 674, 837, 664, 822, 641, 826, 639, 825, 639, 825, 637, 817, 634, 810, 631, 800, 632, 786, 632, 783, 633, 779, 633, 778, 635, 777, 638, 775, 642, 774, 644, 772, 646, 772, 652, 772, 654, 766, Q, 656, 755, 653, 746, Z]],\n      \"label\": \"Bucharest\",\n      \"shortLabel\": \"BI\",\n      \"labelPosition\": [51.9, 91],\n      \"labelAlignment\": [CEN, MID]\n    },\n    \"RO.IF\": {\n      \"outlines\": [[M, 812, 78, Q, 780, 74, 747, 73, 745, 73, 744, 73, 737, 71, 732, 70, 717, 66, 711, 53, 709, 51, 707, 50, 705, 46, 704, 46, 695, 43, 686, 41, 684, 41, 682, 41, 674, 40, 666, 38, 664, 38, 662, 36, 661, 33, 659, 28, 657, 25, 654, 13, 629, 11, 604, 11, 571, 11, 536, 13, 534, 13, 533, 13, 529, 15, 528, 16, 524, 18, 523, 21, 521, 23, 520, 25, 516, 28, 516, 31, 513, 40, 511, 46, 510, 48, 508, 50, 498, 63, 490, 71, 488, 73, 486, 73, 470, 74, 452, 75, 387, 74, 322, 73, 320, 73, 319, 73, 284, 71, 247, 71, 244, 71, 242, 73, 236, 76, 232, 83, 232, 84, 229, 84, 217, 84, 218, 96, 216, 111, 214, 128, 212, 147, 222, 158, 224, 159, 224, 161, 224, 167, 229, 169, 236, 169, 237, 177, 237, 182, 237, 189, 239, 204, 234, 211, 232, 212, 231, 214, 224, 224, 216, 229, 211, 232, 209, 236, 209, 255, 209, 274, 209, 279, 208, 282, 207, 284, 206, 285, 202, 289, 201, 290, 197, 292, 196, 294, 191, 298, 188, 304, 186, 305, 186, 307, 184, 355, 184, 403, 191, 403, 194, 407, 199, 411, 211, 413, 212, 426, 214, 441, 214, 456, 209, 463, 207, 465, 206, 466, 202, 473, 198, 476, 187, 483, 181, 496, 172, 509, 154, 508, 143, 508, 138, 513, 136, 516, 134, 518, 131, 521, 128, 526, 126, 529, 125, 534, 125, 536, 125, 538, 123, 566, 125, 592, 124, 611, 120, 621, 118, 624, 116, 624, 108, 627, 101, 634, 95, 642, 83, 641, 48, 635, 27, 644, 20, 647, 15, 656, 15, 657, 13, 659, 12, 704, 12, 749, 12, 757, 13, 767, 13, 770, 17, 770, 22, 770, 28, 776, 35, 781, 33, 795, 31, 808, 33, 810, 41, 815, 48, 820, 50, 821, 51, 822, 55, 823, 56, 825, 60, 830, 70, 833, 71, 833, 73, 835, 78, 838, 78, 845, 80, 858, 80, 873, 80, 906, 78, 938, 78, 939, 78, 941, 76, 944, 75, 946, 73, 948, 71, 949, 70, 953, 66, 958, 55, 959, 42, 959, 38, 959, 31, 964, 23, 969, 23, 982, 23, 994, 20, 1019, 16, 1044, 21, 1052, 25, 1061, 25, 1062, 26, 1080, 48, 1077, 51, 1077, 53, 1079, 63, 1085, 83, 1084, 88, 1084, 91, 1086, 101, 1090, 116, 1096, 121, 1097, 126, 1100, 136, 1109, 144, 1119, 146, 1124, 149, 1125, 156, 1132, 169, 1130, 191, 1129, 209, 1134, 232, 1142, 247, 1165, 249, 1168, 251, 1170, 260, 1178, 269, 1195, 271, 1197, 272, 1198, 282, 1203, 301, 1202, 319, 1198, 330, 1203, 334, 1205, 334, 1207, 342, 1223, 352, 1237, 354, 1238, 355, 1240, 359, 1248, 365, 1253, 375, 1260, 393, 1258, 398, 1258, 400, 1260, 405, 1263, 412, 1266, 417, 1271, 423, 1280, 425, 1281, 425, 1283, 430, 1295, 433, 1301, 435, 1303, 435, 1305, 437, 1315, 443, 1316, 448, 1316, 451, 1316, 453, 1316, 457, 1315, 460, 1315, 464, 1316, 468, 1318, 472, 1318, 476, 1318, 486, 1319, 496, 1319, 505, 1318, 513, 1317, 522, 1319, 531, 1320, 545, 1319, 559, 1318, 564, 1320, 568, 1321, 569, 1321, 588, 1323, 604, 1321, 606, 1321, 619, 1320, 633, 1319, 633, 1307, 634, 1295, 636, 1286, 637, 1276, 639, 1271, 641, 1265, 646, 1264, 651, 1263, 660, 1261, 669, 1258, 671, 1257, 673, 1254, 675, 1256, 677, 1257, 681, 1257, 684, 1256, 691, 1257, 698, 1259, 701, 1239, 704, 1219, 701, 1215, 697, 1211, 704, 1205, 710, 1199, 716, 1199, 722, 1200, 728, 1201, 733, 1202, 747, 1202, 761, 1201, 764, 1179, 767, 1157, 769, 1155, 777, 1137, 800, 1140, 815, 1142, 822, 1137, 823, 1134, 823, 1130, 822, 1114, 832, 1109, 835, 1107, 834, 1104, 833, 1100, 837, 1092, 840, 1084, 846, 1079, 851, 1074, 865, 1074, L, 865, 1073, Q, 868, 1074, 874, 1066, 880, 1059, 886, 1051, 892, 1042, 892, 1043, L, 892, 1031, Q, 892, 1017, 896, 998, 899, 978, 911, 971, 923, 964, 936, 956, 938, 954, 938, 953, 940, 949, 941, 946, 948, 933, 958, 923, 959, 921, 961, 920, 971, 915, 989, 915, 993, 915, 996, 915, 1001, 913, 1008, 913, 1023, 913, 1039, 911, 1041, 911, 1043, 911, 1062, 911, 1079, 908, L, 1082, 906, Q, 1086, 870, 1086, 832, 1086, 828, 1084, 827, 1079, 823, 1074, 823, 1067, 821, 1061, 820, 1059, 818, 1058, 818, 1039, 817, 1021, 817, 1018, 816, 1014, 815, 1003, 808, 983, 810, 979, 810, 975, 808, 973, 808, 971, 807, 953, 805, 953, 788, 953, 785, 951, 780, 950, 775, 948, 770, 946, 767, 945, 765, 941, 763, 936, 762, 935, 762, 933, 762, 930, 760, 928, 759, 926, 750, 918, 749, 915, 748, 911, 747, 905, 743, 893, 747, 886, 747, 887, 742, 887, 720, 887, 699, 886, 665, 888, 631, 888, 629, 890, 627, 891, 622, 896, 614, 901, 602, 911, 592, 913, 591, 913, 588, 913, 577, 921, 574, 928, 572, 933, 569, L, 936, 568, Q, 936, 559, 943, 558, 946, 557, 946, 556, 950, 544, 950, 531, 950, 514, 951, 500, 951, 486, 946, 481, 945, 479, 943, 478, 933, 466, 915, 466, 900, 466, 887, 461, 885, 461, 883, 461, 880, 460, 878, 458, 875, 451, 875, 441, 875, 425, 878, 408, 895, 403, 901, 388, 906, 375, 918, 368, 923, 367, 928, 360, 931, 358, 933, 358, 940, 358, 940, 353, 940, 333, 940, 314, 939, 282, 938, 249, 938, 247, 938, 246, 939, 230, 925, 232, 906, 234, 900, 221, 898, 219, 896, 217, 888, 209, 868, 212, 862, 212, 862, 207, 862, 177, 862, 149, 861, 146, 860, 143, 860, 141, 857, 139, 853, 134, 843, 131, 840, 131, 837, 129, 823, 126, 822, 118, 820, 111, 818, 103, 818, 99, 817, 98, 812, 91, 812, 83, Q, 812, 79, 812, 78, Z, M, 568, 728, Q, 571, 729, 572, 730, 573, 731, 573, 733, 572, 736, 577, 737, 579, 737, 579, 737, 599, 737, 619, 737, 635, 737, 650, 738, 651, 738, 652, 739, 652, 742, 653, 746, 656, 755, 654, 766, 652, 772, 646, 772, 644, 772, 642, 774, 638, 775, 635, 777, 633, 778, 633, 779, 632, 783, 632, 786, 631, 800, 634, 810, 637, 817, 639, 825, 639, 825, 641, 826, 664, 822, 674, 837, 677, 840, 679, 841, 685, 841, 688, 843, 693, 846, 701, 845, 707, 845, 710, 848, 711, 850, 712, 851, 714, 852, 716, 853, 718, 853, 718, 855, 718, 861, 721, 863, 728, 869, 739, 867, 747, 866, 746, 874, 745, 881, 743, 887, 743, 889, 741, 890, 733, 891, 727, 896, 725, 898, 724, 899, 722, 901, 720, 903, 717, 906, 711, 911, 710, 913, 708, 913, 700, 916, 694, 920, 688, 924, 682, 930, 681, 932, 679, 932, 678, 933, 677, 934, 675, 934, 672, 934, 660, 933, 657, 941, 656, 944, 654, 946, 652, 947, 653, 949, 652, 955, 651, 959, 650, 960, 650, 963, 650, 999, 648, 1036, 648, 1037, 647, 1038, 645, 1040, 643, 1042, 641, 1042, 639, 1042, 627, 1042, 615, 1043, 610, 1043, 607, 1048, 606, 1050, 604, 1052, 602, 1052, 601, 1054, 598, 1057, 593, 1057, 590, 1057, 588, 1058, 586, 1060, 584, 1062, 583, 1063, 581, 1065, 573, 1071, 560, 1070, 556, 1070, 553, 1071, 542, 1075, 535, 1077, 532, 1079, 531, 1080, 526, 1083, 519, 1084, 509, 1084, 500, 1085, 488, 1084, 475, 1085, 474, 1086, 473, 1086, 465, 1090, 460, 1096, 458, 1099, 451, 1096, 449, 1096, 446, 1094, 444, 1092, 442, 1091, 438, 1087, 437, 1082, 437, 1081, 436, 1080, 430, 1073, 424, 1067, 423, 1065, 423, 1062, 421, 1058, 419, 1055, 418, 1053, 417, 1051, 417, 1050, 416, 1049, 411, 1041, 409, 1034, 408, 1032, 407, 1032, 399, 1028, 396, 1020, 394, 1016, 393, 1011, 393, 1011, 392, 1009, 388, 1006, 382, 1002, 382, 1001, 380, 1000, 376, 997, 375, 992, 375, 990, 374, 989, 368, 976, 361, 965, 359, 964, 358, 963, 351, 956, 345, 951, 344, 949, 343, 947, 341, 943, 336, 941, 331, 938, 329, 932, 328, 931, 327, 930, 322, 924, 314, 922, 313, 922, 312, 921, 308, 919, 305, 918, 303, 916, 301, 916, 300, 915, 299, 914, 295, 911, 293, 908, 289, 902, 293, 898, L, 293, 898, Q, 298, 894, 303, 891, 305, 889, 307, 890, 322, 889, 336, 889, 337, 889, 338, 888, 343, 882, 348, 877, 349, 876, 351, 876, 385, 876, 420, 874, L, 420, 872, Q, 420, 860, 419, 848, 419, 847, 418, 846, 411, 840, 405, 834, 399, 828, 395, 821, 395, 820, 394, 820, 389, 818, 386, 812, 386, 812, 385, 810, 380, 805, 380, 795, 379, 789, 383, 787, 387, 784, 388, 779, 389, 776, 388, 773, 387, 765, 392, 762, 397, 757, 403, 753, 405, 752, 406, 750, 411, 745, 417, 740, 418, 739, 420, 739, 426, 736, 438, 738, 450, 740, 454, 733, 455, 732, 455, 731, 460, 725, 471, 725, 492, 726, 513, 725, 515, 725, 517, 725, 521, 724, 526, 724, 546, 723, 566, 727, Q, 567, 727, 568, 728, Z]],\n      \"label\": \"Ilfov\",\n      \"shortLabel\": \"IF\",\n      \"labelPosition\": [55.5, 39],\n      \"labelAlignment\": [CEN, MID]\n    }\n  }\n}];\n\nexports['default'] = {\n  extension: geodefinitions,\n  name: 'bucurestiilfov',\n  type: 'maps'\n};\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// fusioncharts.bucurestiilfov.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 383);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5cc9f3a4c32fe32be5ef","module.exports = FusionCharts;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"FusionCharts\"\n// module id = 0\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326","import FusionCharts from 'FusionCharts';\nimport bucurestiilfov from '../maps/fusioncharts.bucurestiilfov';\n\nFusionCharts.addDep(bucurestiilfov);\nFusionCharts.addFile('fusioncharts.bucurestiilfov.js');\n\n\n// WEBPACK FOOTER //\n// ./source/wrappers/fusioncharts.bucurestiilfov.js","/**!\n * @license FusionCharts JavaScript Library\n * Copyright FusionCharts Technologies LLP\n * License Information at <http://www.fusioncharts.com/license>\n *\n * @author FusionCharts Technologies LLP\n * @meta package_map_pack\n * @id fusionmaps.BucurestiIlfov.20.12-21-2012 11:40:52\n */\n\nlet M = 'M', // SVG MoveTo\n  L = 'L', // SVG LineTo\n  Z = 'Z', // SVG ClosePath\n  Q = 'Q', // SVG Quadratic Beizer\n  LFT = 'left',\n  RGT = 'right',\n  CEN = 'center',\n  MID = 'middle',\n  TOP = 'top',\n  BTM = 'bottom',\n  geodefinitions = [{\n  \"name\": \"BucurestiIlfov\",\n  \"revision\": 20,\n  \"standaloneInit\": true,\n  \"baseWidth\": 110,\n  \"baseHeight\": 133,\n  \"baseScaleFactor\": 10,\n  \"entities\": {\n    \"RO.BI\": {\n      \"outlines\": [\n        [M, 653, 746, Q, 652, 742, 652, 739, 651, 738, 650, 738, 635, 737, 619, 737, 599, 737, 579, 737, 579, 737, 577, 737, 572, 736, 573, 733, 573, 731, 572, 730, 571, 729, 568, 728, 567, 727, 566, 727, 546, 723, 526, 724, 521, 724, 517, 725, 515, 725, 513, 725, 492, 726, 471, 725, 460, 725, 455, 731, 455, 732, 454, 733, 450, 740, 438, 738, 426, 736, 420, 739, 418, 739, 417, 740, 411, 745, 406, 750, 405, 752, 403, 753, 397, 757, 392, 762, 387, 765, 388, 773, 389, 776, 388, 779, 387, 784, 383, 787, 379, 789, 380, 795, 380, 805, 385, 810, 386, 812, 386, 812, 389, 818, 394, 820, 395, 820, 395, 821, 399, 828, 405, 834, 411, 840, 418, 846, 419, 847, 419, 848, 420, 860, 420, 872, L, 420, 874, Q, 385, 876, 351, 876, 349, 876, 348, 877, 343, 882, 338, 888, 337, 889, 336, 889, 322, 889, 307, 890, 305, 889, 303, 891, 298, 894, 293, 898, L, 293, 898, Q, 289, 902, 293, 908, 295, 911, 299, 914, 300, 915, 301, 916, 303, 916, 305, 918, 308, 919, 312, 921, 313, 922, 314, 922, 322, 924, 327, 930, 328, 931, 329, 932, 331, 938, 336, 941, 341, 943, 343, 947, 344, 949, 345, 951, 351, 956, 358, 963, 359, 964, 361, 965, 368, 976, 374, 989, 375, 990, 375, 992, 376, 997, 380, 1000, 382, 1001, 382, 1002, 388, 1006, 392, 1009, 393, 1011, 393, 1011, 394, 1016, 396, 1020, 399, 1028, 407, 1032, 408, 1032, 409, 1034, 411, 1041, 416, 1049, 417, 1050, 417, 1051, 418, 1053, 419, 1055, 421, 1058, 423, 1062, 423, 1065, 424, 1067, 430, 1073, 436, 1080, 437, 1081, 437, 1082, 438, 1087, 442, 1091, 444, 1092, 446, 1094, 449, 1096, 451, 1096, 458, 1099, 460, 1096, 465, 1090, 473, 1086, 474, 1086, 475, 1085, 488, 1084, 500, 1085, 509, 1084, 519, 1084, 526, 1083, 531, 1080, 532, 1079, 535, 1077, 542, 1075, 553, 1071, 556, 1070, 560, 1070, 573, 1071, 581, 1065, 583, 1063, 584, 1062, 586, 1060, 588, 1058, 590, 1057, 593, 1057, 598, 1057, 601, 1054, 602, 1052, 604, 1052, 606, 1050, 607, 1048, 610, 1043, 615, 1043, 627, 1042, 639, 1042, 641, 1042, 643, 1042, 645, 1040, 647, 1038, 648, 1037, 648, 1036, 650, 999, 650, 963, 650, 960, 651, 959, 652, 955, 653, 949, 652, 947, 654, 946, 656, 944, 657, 941, 660, 933, 672, 934, 675, 934, 677, 934, 678, 933, 679, 932, 681, 932, 682, 930, 688, 924, 694, 920, 700, 916, 708, 913, 710, 913, 711, 911, 717, 906, 720, 903, 722, 901, 724, 899, 725, 898, 727, 896, 733, 891, 741, 890, 743, 889, 743, 887, 745, 881, 746, 874, 747, 866, 739, 867, 728, 869, 721, 863, 718, 861, 718, 855, 718, 853, 716, 853, 714, 852, 712, 851, 711, 850, 710, 848, 707, 845, 701, 845, 693, 846, 688, 843, 685, 841, 679, 841, 677, 840, 674, 837, 664, 822, 641, 826, 639, 825, 639, 825, 637, 817, 634, 810, 631, 800, 632, 786, 632, 783, 633, 779, 633, 778, 635, 777, 638, 775, 642, 774, 644, 772, 646, 772, 652, 772, 654, 766, Q, 656, 755, 653, 746, Z]\n      ],\n      \"label\": \"Bucharest\",\n      \"shortLabel\": \"BI\",\n      \"labelPosition\": [51.9, 91],\n      \"labelAlignment\": [CEN, MID]\n    },\n    \"RO.IF\": {\n      \"outlines\": [\n        [M, 812, 78, Q, 780, 74, 747, 73, 745, 73, 744, 73, 737, 71, 732, 70, 717, 66, 711, 53, 709, 51, 707, 50, 705, 46, 704, 46, 695, 43, 686, 41, 684, 41, 682, 41, 674, 40, 666, 38, 664, 38, 662, 36, 661, 33, 659, 28, 657, 25, 654, 13, 629, 11, 604, 11, 571, 11, 536, 13, 534, 13, 533, 13, 529, 15, 528, 16, 524, 18, 523, 21, 521, 23, 520, 25, 516, 28, 516, 31, 513, 40, 511, 46, 510, 48, 508, 50, 498, 63, 490, 71, 488, 73, 486, 73, 470, 74, 452, 75, 387, 74, 322, 73, 320, 73, 319, 73, 284, 71, 247, 71, 244, 71, 242, 73, 236, 76, 232, 83, 232, 84, 229, 84, 217, 84, 218, 96, 216, 111, 214, 128, 212, 147, 222, 158, 224, 159, 224, 161, 224, 167, 229, 169, 236, 169, 237, 177, 237, 182, 237, 189, 239, 204, 234, 211, 232, 212, 231, 214, 224, 224, 216, 229, 211, 232, 209, 236, 209, 255, 209, 274, 209, 279, 208, 282, 207, 284, 206, 285, 202, 289, 201, 290, 197, 292, 196, 294, 191, 298, 188, 304, 186, 305, 186, 307, 184, 355, 184, 403, 191, 403, 194, 407, 199, 411, 211, 413, 212, 426, 214, 441, 214, 456, 209, 463, 207, 465, 206, 466, 202, 473, 198, 476, 187, 483, 181, 496, 172, 509, 154, 508, 143, 508, 138, 513, 136, 516, 134, 518, 131, 521, 128, 526, 126, 529, 125, 534, 125, 536, 125, 538, 123, 566, 125, 592, 124, 611, 120, 621, 118, 624, 116, 624, 108, 627, 101, 634, 95, 642, 83, 641, 48, 635, 27, 644, 20, 647, 15, 656, 15, 657, 13, 659, 12, 704, 12, 749, 12, 757, 13, 767, 13, 770, 17, 770, 22, 770, 28, 776, 35, 781, 33, 795, 31, 808, 33, 810, 41, 815, 48, 820, 50, 821, 51, 822, 55, 823, 56, 825, 60, 830, 70, 833, 71, 833, 73, 835, 78, 838, 78, 845, 80, 858, 80, 873, 80, 906, 78, 938, 78, 939, 78, 941, 76, 944, 75, 946, 73, 948, 71, 949, 70, 953, 66, 958, 55, 959, 42, 959, 38, 959, 31, 964, 23, 969, 23, 982, 23, 994, 20, 1019, 16, 1044, 21, 1052, 25, 1061, 25, 1062, 26, 1080, 48, 1077, 51, 1077, 53, 1079, 63, 1085, 83, 1084, 88, 1084, 91, 1086, 101, 1090, 116, 1096, 121, 1097, 126, 1100, 136, 1109, 144, 1119, 146, 1124, 149, 1125, 156, 1132, 169, 1130, 191, 1129, 209, 1134, 232, 1142, 247, 1165, 249, 1168, 251, 1170, 260, 1178, 269, 1195, 271, 1197, 272, 1198, 282, 1203, 301, 1202, 319, 1198, 330, 1203, 334, 1205, 334, 1207, 342, 1223, 352, 1237, 354, 1238, 355, 1240, 359, 1248, 365, 1253, 375, 1260, 393, 1258, 398, 1258, 400, 1260, 405, 1263, 412, 1266, 417, 1271, 423, 1280, 425, 1281, 425, 1283, 430, 1295, 433, 1301, 435, 1303, 435, 1305, 437, 1315, 443, 1316, 448, 1316, 451, 1316, 453, 1316, 457, 1315, 460, 1315, 464, 1316, 468, 1318, 472, 1318, 476, 1318, 486, 1319, 496, 1319, 505, 1318, 513, 1317, 522, 1319, 531, 1320, 545, 1319, 559, 1318, 564, 1320, 568, 1321, 569, 1321, 588, 1323, 604, 1321, 606, 1321, 619, 1320, 633, 1319, 633, 1307, 634, 1295, 636, 1286, 637, 1276, 639, 1271, 641, 1265, 646, 1264, 651, 1263, 660, 1261, 669, 1258, 671, 1257, 673, 1254, 675, 1256, 677, 1257, 681, 1257, 684, 1256, 691, 1257, 698, 1259, 701, 1239, 704, 1219, 701, 1215, 697, 1211, 704, 1205, 710, 1199, 716, 1199, 722, 1200, 728, 1201, 733, 1202, 747, 1202, 761, 1201, 764, 1179, 767, 1157, 769, 1155, 777, 1137, 800, 1140, 815, 1142, 822, 1137, 823, 1134, 823, 1130, 822, 1114, 832, 1109, 835, 1107, 834, 1104, 833, 1100, 837, 1092, 840, 1084, 846, 1079, 851, 1074, 865, 1074, L, 865, 1073, Q, 868, 1074, 874, 1066, 880, 1059, 886, 1051, 892, 1042, 892, 1043, L, 892, 1031, Q, 892, 1017, 896, 998, 899, 978, 911, 971, 923, 964, 936, 956, 938, 954, 938, 953, 940, 949, 941, 946, 948, 933, 958, 923, 959, 921, 961, 920, 971, 915, 989, 915, 993, 915, 996, 915, 1001, 913, 1008, 913, 1023, 913, 1039, 911, 1041, 911, 1043, 911, 1062, 911, 1079, 908, L, 1082, 906, Q, 1086, 870, 1086, 832, 1086, 828, 1084, 827, 1079, 823, 1074, 823, 1067, 821, 1061, 820, 1059, 818, 1058, 818, 1039, 817, 1021, 817, 1018, 816, 1014, 815, 1003, 808, 983, 810, 979, 810, 975, 808, 973, 808, 971, 807, 953, 805, 953, 788, 953, 785, 951, 780, 950, 775, 948, 770, 946, 767, 945, 765, 941, 763, 936, 762, 935, 762, 933, 762, 930, 760, 928, 759, 926, 750, 918, 749, 915, 748, 911, 747, 905, 743, 893, 747, 886, 747, 887, 742, 887, 720, 887, 699, 886, 665, 888, 631, 888, 629, 890, 627, 891, 622, 896, 614, 901, 602, 911, 592, 913, 591, 913, 588, 913, 577, 921, 574, 928, 572, 933, 569, L, 936, 568, Q, 936, 559, 943, 558, 946, 557, 946, 556, 950, 544, 950, 531, 950, 514, 951, 500, 951, 486, 946, 481, 945, 479, 943, 478, 933, 466, 915, 466, 900, 466, 887, 461, 885, 461, 883, 461, 880, 460, 878, 458, 875, 451, 875, 441, 875, 425, 878, 408, 895, 403, 901, 388, 906, 375, 918, 368, 923, 367, 928, 360, 931, 358, 933, 358, 940, 358, 940, 353, 940, 333, 940, 314, 939, 282, 938, 249, 938, 247, 938, 246, 939, 230, 925, 232, 906, 234, 900, 221, 898, 219, 896, 217, 888, 209, 868, 212, 862, 212, 862, 207, 862, 177, 862, 149, 861, 146, 860, 143, 860, 141, 857, 139, 853, 134, 843, 131, 840, 131, 837, 129, 823, 126, 822, 118, 820, 111, 818, 103, 818, 99, 817, 98, 812, 91, 812, 83, Q, 812, 79, 812, 78, Z, M, 568, 728, Q, 571, 729, 572, 730, 573, 731, 573, 733, 572, 736, 577, 737, 579, 737, 579, 737, 599, 737, 619, 737, 635, 737, 650, 738, 651, 738, 652, 739, 652, 742, 653, 746, 656, 755, 654, 766, 652, 772, 646, 772, 644, 772, 642, 774, 638, 775, 635, 777, 633, 778, 633, 779, 632, 783, 632, 786, 631, 800, 634, 810, 637, 817, 639, 825, 639, 825, 641, 826, 664, 822, 674, 837, 677, 840, 679, 841, 685, 841, 688, 843, 693, 846, 701, 845, 707, 845, 710, 848, 711, 850, 712, 851, 714, 852, 716, 853, 718, 853, 718, 855, 718, 861, 721, 863, 728, 869, 739, 867, 747, 866, 746, 874, 745, 881, 743, 887, 743, 889, 741, 890, 733, 891, 727, 896, 725, 898, 724, 899, 722, 901, 720, 903, 717, 906, 711, 911, 710, 913, 708, 913, 700, 916, 694, 920, 688, 924, 682, 930, 681, 932, 679, 932, 678, 933, 677, 934, 675, 934, 672, 934, 660, 933, 657, 941, 656, 944, 654, 946, 652, 947, 653, 949, 652, 955, 651, 959, 650, 960, 650, 963, 650, 999, 648, 1036, 648, 1037, 647, 1038, 645, 1040, 643, 1042, 641, 1042, 639, 1042, 627, 1042, 615, 1043, 610, 1043, 607, 1048, 606, 1050, 604, 1052, 602, 1052, 601, 1054, 598, 1057, 593, 1057, 590, 1057, 588, 1058, 586, 1060, 584, 1062, 583, 1063, 581, 1065, 573, 1071, 560, 1070, 556, 1070, 553, 1071, 542, 1075, 535, 1077, 532, 1079, 531, 1080, 526, 1083, 519, 1084, 509, 1084, 500, 1085, 488, 1084, 475, 1085, 474, 1086, 473, 1086, 465, 1090, 460, 1096, 458, 1099, 451, 1096, 449, 1096, 446, 1094, 444, 1092, 442, 1091, 438, 1087, 437, 1082, 437, 1081, 436, 1080, 430, 1073, 424, 1067, 423, 1065, 423, 1062, 421, 1058, 419, 1055, 418, 1053, 417, 1051, 417, 1050, 416, 1049, 411, 1041, 409, 1034, 408, 1032, 407, 1032, 399, 1028, 396, 1020, 394, 1016, 393, 1011, 393, 1011, 392, 1009, 388, 1006, 382, 1002, 382, 1001, 380, 1000, 376, 997, 375, 992, 375, 990, 374, 989, 368, 976, 361, 965, 359, 964, 358, 963, 351, 956, 345, 951, 344, 949, 343, 947, 341, 943, 336, 941, 331, 938, 329, 932, 328, 931, 327, 930, 322, 924, 314, 922, 313, 922, 312, 921, 308, 919, 305, 918, 303, 916, 301, 916, 300, 915, 299, 914, 295, 911, 293, 908, 289, 902, 293, 898, L, 293, 898, Q, 298, 894, 303, 891, 305, 889, 307, 890, 322, 889, 336, 889, 337, 889, 338, 888, 343, 882, 348, 877, 349, 876, 351, 876, 385, 876, 420, 874, L, 420, 872, Q, 420, 860, 419, 848, 419, 847, 418, 846, 411, 840, 405, 834, 399, 828, 395, 821, 395, 820, 394, 820, 389, 818, 386, 812, 386, 812, 385, 810, 380, 805, 380, 795, 379, 789, 383, 787, 387, 784, 388, 779, 389, 776, 388, 773, 387, 765, 392, 762, 397, 757, 403, 753, 405, 752, 406, 750, 411, 745, 417, 740, 418, 739, 420, 739, 426, 736, 438, 738, 450, 740, 454, 733, 455, 732, 455, 731, 460, 725, 471, 725, 492, 726, 513, 725, 515, 725, 517, 725, 521, 724, 526, 724, 546, 723, 566, 727, Q, 567, 727, 568, 728, Z]\n      ],\n      \"label\": \"Ilfov\",\n      \"shortLabel\": \"IF\",\n      \"labelPosition\": [55.5, 39],\n      \"labelAlignment\": [CEN, MID]\n    }\n  }\n}];\n\nexport default {\n  extension: geodefinitions,\n  name: 'bucurestiilfov',\n  type: 'maps',\n};\n\n\n// WEBPACK FOOTER //\n// ./source/maps/fusioncharts.bucurestiilfov.js"],"sourceRoot":""}