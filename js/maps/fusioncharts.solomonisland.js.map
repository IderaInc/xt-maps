{"version":3,"sources":["webpack:///fusioncharts.solomonisland.js","webpack:///webpack/bootstrap 39df072d133de9a1fe38","webpack:///external \"FusionCharts\"","webpack:///./source/wrappers/fusioncharts.solomonisland.js","webpack:///./source/maps/fusioncharts.solomonisland.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","0","FusionCharts","563","_interopRequireDefault","obj","default","_FusionCharts","_FusionCharts2","_fusioncharts","_fusioncharts2","addDep","addFile","564","M","L","Z","Q","LFT","CEN","MID","geodefinitions","revision","standaloneInit","baseWidth","baseHeight","baseScaleFactor","entities","SB.CN","outlines","label","shortLabel","labelPosition","labelAlignment","labelConnectors","SB.ML","SB.MK","SB.TE","SB.RB","SB.IS","SB.WE","SB.CH","SB.GC","extension","type"],"mappings":"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","file":"fusioncharts.solomonisland.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 563);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, exports) {\n\nmodule.exports = FusionCharts;\n\n/***/ }),\n\n/***/ 563:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _FusionCharts = __webpack_require__(0);\n\nvar _FusionCharts2 = _interopRequireDefault(_FusionCharts);\n\nvar _fusioncharts = __webpack_require__(564);\n\nvar _fusioncharts2 = _interopRequireDefault(_fusioncharts);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n_FusionCharts2['default'].addDep(_fusioncharts2['default']);\n_FusionCharts2['default'].addFile('fusioncharts.solomonisland.js');\n\n/***/ }),\n\n/***/ 564:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n/**!\n * @license FusionCharts JavaScript Library\n * Copyright FusionCharts Technologies LLP\n * License Information at <http://www.fusioncharts.com/license>\n *\n * @author FusionCharts Technologies LLP\n * @meta package_map_pack\n * @id fusionmaps.SolomonIsland.20.10-30-2012 07:04:41\n */\n\nvar M = 'M',\n    // SVG MoveTo\nL = 'L',\n    // SVG LineTo\nZ = 'Z',\n    // SVG ClosePath\nQ = 'Q',\n    // SVG Quadratic Beizer\nLFT = 'left',\n    RGT = 'right',\n    CEN = 'center',\n    MID = 'middle',\n    TOP = 'top',\n    BTM = 'bottom',\n    geodefinitions = [{\n  \"name\": \"SolomonIsland\",\n  \"revision\": 20,\n  \"standaloneInit\": true,\n  \"baseWidth\": 580,\n  \"baseHeight\": 276,\n  \"baseScaleFactor\": 10,\n  \"entities\": {\n    \"SB.CN\": {\n      \"outlines\": [[M, 1980, 1305, Q, 1967, 1287, 1949, 1287, 1943, 1287, 1930, 1303, 1915, 1320, 1915, 1339, 1915, 1344, 1924, 1356, 1933, 1369, 1933, 1374, 1933, 1405, 1990, 1327, Q, 1990, 1318, 1980, 1305, Z]],\n      \"label\": \"Central\",\n      \"shortLabel\": \"CN\",\n      \"labelPosition\": [195.3, 153],\n      \"labelAlignment\": [CEN, BTM],\n      \"labelConnectors\": [[M, 1953, 1530, L, 1953, 1335]]\n    },\n    \"SB.ML\": {\n      \"outlines\": [[M, 3300, 1628, Q, 3298, 1629, 3293, 1645, 3298, 1645, 3303, 1647, 3303, 1654, 3297, 1663, 3290, 1672, 3290, 1682, 3290, 1702, 3326, 1717, 3350, 1717, 3350, 1683, 3350, 1627, 3315, 1627, Q, 3301, 1627, 3300, 1628, Z], [M, 2663, 972, L, 2663, 1005, Q, 2693, 1030, 2701, 1039, 2713, 1053, 2713, 1086, 2703, 1120, 2703, 1147, 2703, 1176, 2697, 1192, 2690, 1209, 2690, 1216, 2692, 1222, 2692, 1225, L, 2708, 1225, Q, 2744, 1225, 2748, 1255, 2753, 1309, 2758, 1317, 2763, 1328, 2776, 1341, 2778, 1345, 2779, 1348, 2790, 1367, 2807, 1379, 2829, 1392, 2840, 1402, 2862, 1412, 2878, 1427, 2892, 1459, 2903, 1462, 2945, 1475, 2978, 1532, 3000, 1570, 3035, 1607, L, 3058, 1607, 3060, 1633, Q, 3061, 1650, 3075, 1655, 3117, 1667, 3123, 1667, 3138, 1667, 3138, 1651, 3138, 1627, 3118, 1589, 3096, 1547, 3093, 1533, L, 3093, 1532, 3093, 1532, Q, 3092, 1532, 3092, 1531, 3058, 1485, 3045, 1480, L, 3045, 1520, Q, 2976, 1493, 2985, 1437, 2990, 1410, 2980, 1384, 2974, 1369, 2960, 1340, 2951, 1309, 2905, 1255, 2898, 1243, 2866, 1223, 2840, 1206, 2840, 1186, 2840, 1177, 2850, 1163, 2860, 1149, 2860, 1127, 2860, 1109, 2788, 1037, 2786, 1034, 2767, 994, 2746, 957, 2735, 957, 2731, 963, 2725, 969, 2712, 980, 2702, 980, 2701, 980, 2680, 972, Z]],\n      \"label\": \"Malaita\",\n      \"shortLabel\": \"ML\",\n      \"labelPosition\": [325.6, 109.5],\n      \"labelAlignment\": [LFT, MID],\n      \"labelConnectors\": [[M, 3256, 1095, L, 2761, 1095]]\n    },\n    \"SB.MK\": {\n      \"outlines\": [[M, 2996, 1960, Q, 3031, 1957, 3033, 1957, 3060, 1957, 3066, 1959, 3090, 1964, 3099, 1986, 3113, 2016, 3115, 2043, 3116, 2063, 3124, 2072, 3128, 2077, 3144, 2087, 3149, 2102, 3164, 2103, 3183, 2103, 3192, 2113, 3236, 2161, 3283, 2161, 3333, 2161, 3342, 2165, 3355, 2171, 3368, 2175, 3376, 2178, 3387, 2188, 3405, 2196, 3410, 2196, 3414, 2196, 3439, 2185, 3443, 2183, 3466, 2181, 3469, 2180, 3477, 2165, 3479, 2164, 3489, 2147, 3485, 2128, 3485, 2120, 3474, 2122, 3462, 2103, 3440, 2068, 3438, 2065, 3427, 2045, 3418, 2031, 3400, 2006, 3378, 2006, 3366, 2014, 3357, 2013, L, 3329, 2013, Q, 3329, 2016, 3321, 2017, 3310, 2017, 3283, 2013, 3269, 2006, 3248, 1996, 3198, 1959, 3175, 1952, 3145, 1940, 3139, 1938, 3126, 1927, 3110, 1916, 3078, 1891, 3068, 1887, 3064, 1886, 3039, 1886, 3002, 1886, 2998, 1897, Q, 2995, 1907, 2996, 1960, Z]],\n      \"label\": \"Makira\",\n      \"shortLabel\": \"MK\",\n      \"labelPosition\": [366.6, 213],\n      \"labelAlignment\": [LFT, MID],\n      \"labelConnectors\": [[M, 3666, 2130, L, 3371, 2130]]\n    },\n    \"SB.TE\": {\n      \"outlines\": [[M, 5664, 2560, Q, 5625, 2560, 5625, 2575, 5625, 2592, 5675, 2625, 5673, 2625, 5673, 2627, L, 5720, 2627, 5720, 2607, Q, 5720, 2590, 5704, 2575, Q, 5687, 2560, 5664, 2560, Z], [M, 5540, 2410, Q, 5533, 2407, 5509, 2407, 5489, 2407, 5485, 2410, 5478, 2414, 5478, 2436, 5478, 2449, 5499, 2465, 5522, 2482, 5543, 2472, 5543, 2465, 5549, 2453, 5555, 2441, 5555, 2435, Q, 5555, 2415, 5540, 2410, Z], [M, 5348, 2145, L, 5348, 2117, Q, 5295, 2111, 5279, 2110, 5277, 2110, 5275, 2110, 5228, 2110, 5198, 2125, 5161, 2142, 5158, 2175, L, 5158, 2197, Q, 5200, 2212, 5209, 2213, 5230, 2215, 5230, 2193, 5225, 2185, 5225, 2178, 5225, 2164, 5277, 2157, Q, 5341, 2148, 5348, 2145, Z]],\n      \"label\": \"Temotu\",\n      \"shortLabel\": \"TE\",\n      \"labelPosition\": [522.7, 198],\n      \"labelAlignment\": [CEN, TOP],\n      \"labelConnectors\": [[M, 5227, 1980, L, 5227, 2135]]\n    },\n    \"SB.RB\": {\n      \"outlines\": [[M, 2383, 2538, Q, 2372, 2554, 2372, 2555, 2372, 2558, 2379, 2567, 2388, 2577, 2393, 2590, 2420, 2586, 2435, 2587, 2439, 2587, 2450, 2599, 2461, 2611, 2479, 2611, 2488, 2611, 2498, 2593, 2508, 2598, 2522, 2623, 2544, 2650, 2548, 2650, 2552, 2650, 2560, 2639, 2567, 2627, 2569, 2626, 2581, 2620, 2599, 2620, L, 2599, 2615, Q, 2562, 2588, 2557, 2587, 2541, 2583, 2504, 2563, 2481, 2555, 2391, 2522, Q, 2381, 2522, 2383, 2538, Z], [M, 2262, 2443, Q, 2268, 2450, 2283, 2465, 2287, 2461, 2298, 2456, 2304, 2454, 2304, 2443, 2304, 2413, 2263, 2413, 2253, 2413, 2253, 2419, Q, 2253, 2432, 2262, 2443, Z]],\n      \"label\": \"Rennell and Bellona\",\n      \"shortLabel\": \"RB\",\n      \"labelPosition\": [277.1, 260.6],\n      \"labelAlignment\": [LFT, MID],\n      \"labelConnectors\": [[M, 2771, 2606, L, 2546, 2606]]\n    },\n    \"SB.IS\": {\n      \"outlines\": [[M, 2211, 1087, Q, 2222, 1082, 2238, 1082, L, 2238, 1056, Q, 2230, 1050, 2213, 1022, 2200, 1001, 2182, 1001, 2175, 1001, 2160, 1010, 2144, 1020, 2144, 1027, 2144, 1039, 2176, 1063, Q, 2202, 1081, 2211, 1087, Z], [M, 1574, 591, L, 1580, 591, Q, 1582, 606, 1595, 628, 1598, 648, 1606, 648, 1624, 650, 1645, 650, 1666, 650, 1669, 640, 1677, 649, 1686, 651, 1692, 653, 1694, 660, 1694, 678, 1696, 688, 1699, 699, 1711, 707, 1713, 707, 1715, 707, 1737, 726, 1744, 731, 1768, 749, 1774, 758, 1778, 766, 1791, 774, 1803, 781, 1805, 783, L, 1828, 809, Q, 1845, 823, 1873, 834, 1912, 846, 1919, 850, 1988, 890, 2005, 905, 2042, 936, 2102, 953, 2125, 960, 2142, 968, 2167, 980, 2178, 981, 2181, 981, 2183, 981, 2205, 983, 2225, 1003, 2243, 1027, 2248, 1031, 2261, 1041, 2270, 1057, 2277, 1068, 2289, 1071, 2309, 1077, 2322, 1085, 2320, 1086, 2320, 1087, L, 2324, 1087, Q, 2326, 1076, 2332, 1069, 2332, 1055, 2310, 1031, 2308, 1028, 2293, 1026, 2283, 1024, 2280, 1005, 2281, 1002, 2292, 991, 2300, 982, 2300, 974, 2300, 966, 2187, 885, L, 2158, 863, Q, 2145, 854, 2137, 840, 2134, 835, 2107, 823, 2100, 821, 2072, 806, 2065, 805, 2058, 805, 2049, 804, 2024, 787, L, 1995, 767, Q, 1989, 763, 1950, 760, 1916, 749, 1908, 742, 1902, 736, 1890, 716, 1881, 703, 1839, 673, 1831, 664, 1802, 646, 1797, 642, 1786, 628, 1774, 616, 1759, 616, 1721, 615, 1702, 606, 1684, 597, 1665, 597, 1651, 598, 1640, 598, 1612, 598, 1607, 591, 1605, 589, 1605, 587, 1605, 584, 1612, 576, 1619, 569, 1619, 560, 1619, 543, 1561, 543, 1542, 544, 1542, 554, Q, 1542, 559, 1574, 591, Z]],\n      \"label\": \"Isabel\",\n      \"shortLabel\": \"IS\",\n      \"labelPosition\": [225.6, 73],\n      \"labelAlignment\": [LFT, MID],\n      \"labelConnectors\": [[M, 2256, 730, L, 1821, 730]]\n    },\n    \"SB.WE\": {\n      \"outlines\": [[M, 813, 840, Q, 798, 853, 798, 874, 798, 901, 832, 901, 865, 902, 865, 860, L, 865, 837, Q, 862, 827, 844, 827, Q, 827, 827, 813, 840, Z], [M, 703, 850, Q, 700, 905, 720, 910, L, 718, 919, Q, 718, 921, 723, 925, 729, 930, 734, 930, 753, 930, 753, 894, 753, 858, 742, 825, 729, 788, 710, 783, Q, 703, 800, 703, 850, Z], [M, 795, 633, Q, 753, 598, 735, 598, 683, 598, 683, 642, 683, 659, 697, 671, 697, 672, 725, 690, 759, 713, 747, 757, 768, 775, 777, 775, 790, 770, 798, 770, 791, 734, 812, 719, 835, 702, 835, 674, Q, 835, 666, 795, 633, Z], [M, 1513, 1163, Q, 1490, 1163, 1490, 1204, 1490, 1215, 1515, 1218, 1540, 1221, 1540, 1203, Q, 1540, 1163, 1513, 1163, Z], [M, 1175, 1151, Q, 1169, 1153, 1158, 1165, L, 1158, 1180, Q, 1165, 1180, 1186, 1192, 1208, 1204, 1222, 1207, L, 1223, 1205, Q, 1225, 1203, 1241, 1199, 1250, 1196, 1248, 1183, 1230, 1174, 1220, 1159, 1215, 1150, 1194, 1150, Q, 1178, 1150, 1175, 1151, Z], [M, 1100, 1110, Q, 1102, 1092, 1128, 1060, 1128, 1033, 1115, 1010, L, 1093, 1010, Q, 1079, 1019, 1052, 1048, 1025, 1076, 1025, 1082, 1025, 1093, 1090, 1165, 1102, 1161, 1102, 1144, Q, 1102, 1134, 1100, 1110, Z], [M, 1206, 814, Q, 1182, 800, 1154, 800, 1130, 800, 1122, 812, 1102, 840, 1088, 852, 1080, 887, 1068, 895, 1060, 900, 1037, 916, 1033, 906, 1028, 901, 1023, 896, 1008, 884, 1018, 879, 1026, 866, 1038, 844, 1038, 807, 1038, 737, 954, 737, 936, 737, 920, 757, 905, 777, 905, 800, 905, 834, 931, 844, 961, 855, 972, 881, 978, 883, 979, 883, L, 990, 895, 990, 907, 979, 908, 983, 908, Q, 967, 910, 938, 912, 939, 914, 960, 945, 973, 965, 994, 965, 1004, 965, 1004, 964, 1006, 961, 1013, 955, 1009, 951, 1006, 946, L, 1045, 945, 1048, 947, Q, 1050, 955, 1064, 965, 1077, 975, 1080, 975, 1090, 975, 1099, 954, 1108, 932, 1140, 932, 1181, 932, 1195, 940, 1220, 952, 1220, 994, 1215, 1014, 1215, 1020, 1215, 1038, 1225, 1052, 1236, 1067, 1250, 1067, L, 1298, 1067, Q, 1298, 1077, 1307, 1088, 1316, 1100, 1324, 1100, 1328, 1100, 1340, 1087, L, 1368, 1087, Q, 1360, 1103, 1360, 1119, 1360, 1144, 1380, 1165, 1400, 1185, 1420, 1185, 1443, 1185, 1448, 1177, 1455, 1170, 1458, 1165, 1466, 1156, 1465, 1147, 1465, 1122, 1474, 1102, 1483, 1081, 1483, 1080, L, 1475, 1060, Q, 1456, 1055, 1440, 1082, 1442, 1082, 1442, 1082, L, 1440, 1082, 1440, 1082, Q, 1433, 1080, 1412, 1067, 1405, 1067, 1398, 1077, L, 1365, 1077, Q, 1365, 1076, 1359, 1033, 1354, 1001, 1340, 985, 1333, 976, 1327, 962, 1323, 950, 1318, 947, 1292, 930, 1290, 915, L, 1263, 915, Q, 1228, 907, 1230, 850, Q, 1232, 829, 1206, 814, Z]],\n      \"label\": \"Western\",\n      \"shortLabel\": \"WE\",\n      \"labelPosition\": [107.1, 127.5],\n      \"labelAlignment\": [CEN, BTM],\n      \"labelConnectors\": [[M, 1071, 1275, L, 1071, 1080]]\n    },\n    \"SB.CH\": {\n      \"outlines\": [[M, 293, 351, Q, 293, 382, 320, 383, 360, 379, 385, 382, 385, 375, 388, 361, 388, 333, 379, 331, 356, 323, 338, 305, L, 310, 305, Q, 293, 322, 293, 351, Z], [M, 238, 480, Q, 231, 480, 220, 487, 208, 496, 208, 505, 208, 514, 225, 525, 236, 532, 242, 536, 244, 538, 246, 539, 262, 537, 263, 535, 265, 533, 265, 510, 265, 490, 260, 485, Q, 256, 480, 238, 480, Z], [M, 511, 229, Q, 507, 221, 488, 222, L, 475, 222, Q, 468, 246, 468, 302, 468, 309, 479, 318, 491, 328, 503, 322, 503, 285, 508, 276, 513, 268, 513, 250, Q, 513, 232, 511, 229, Z], [M, 1255, 535, Q, 1285, 565, 1323, 565, L, 1323, 527, Q, 1316, 524, 1301, 521, 1286, 519, 1275, 512, L, 1263, 512, Q, 1263, 522, 1255, 535, Z], [M, 958, 457, Q, 967, 458, 972, 469, 976, 480, 978, 482, 989, 493, 1018, 493, 1052, 492, 1058, 495, 1108, 527, 1124, 527, 1128, 527, 1160, 510, 1166, 507, 1171, 504, 1178, 525, 1227, 545, 1228, 543, 1229, 542, 1233, 538, 1233, 530, 1233, 515, 1220, 510, 1201, 503, 1195, 497, L, 1182, 497, Q, 1195, 488, 1195, 484, 1195, 480, 1193, 477, 1193, 476, 1193, 475, 1179, 477, 1166, 473, 1158, 471, 1140, 465, 1130, 463, 1107, 462, 1090, 460, 1088, 447, 1086, 437, 1052, 414, 1014, 388, 999, 357, 995, 351, 993, 345, 983, 319, 969, 283, 953, 258, 910, 242, 810, 207, 777, 165, 766, 152, 753, 148, 734, 142, 680, 142, 653, 142, 653, 151, 653, 168, 704, 212, 757, 254, 760, 257, 778, 272, 805, 312, 821, 352, 854, 386, 856, 388, 857, 389, 881, 400, 895, 421, 911, 445, 920, 450, Q, 932, 456, 958, 457, Z]],\n      \"label\": \"Choiseul\",\n      \"shortLabel\": \"CH\",\n      \"labelPosition\": [90.5, 12.5],\n      \"labelAlignment\": [CEN, TOP],\n      \"labelConnectors\": [[M, 905, 125, L, 905, 348]]\n    },\n    \"SB.GC\": {\n      \"outlines\": [[M, 2278, 1322, Q, 2243, 1322, 2243, 1345, 2243, 1361, 2284, 1377, 2325, 1393, 2325, 1364, Q, 2325, 1322, 2278, 1322, Z], [M, 2570, 1520, Q, 2555, 1504, 2489, 1503, 2453, 1502, 2383, 1505, 2370, 1505, 2346, 1498, 2318, 1489, 2310, 1480, 2298, 1464, 2269, 1448, 2239, 1432, 2223, 1432, 2189, 1432, 2180, 1472, 2178, 1485, 2178, 1545, 2178, 1564, 2278, 1670, 2278, 1681, 2333, 1690, 2381, 1697, 2423, 1697, 2522, 1692, 2523, 1692, 2537, 1692, 2590, 1742, 2603, 1753, 2635, 1753, 2674, 1750, 2690, 1750, 2728, 1745, 2738, 1745, 2763, 1722, 2763, 1705, 2758, 1682, 2758, 1672, 2758, 1667, 2748, 1663, 2733, 1658, 2733, 1657, 2720, 1648, 2704, 1641, 2693, 1632, 2690, 1602, 2689, 1588, 2636, 1559, Q, 2575, 1524, 2570, 1520, Z], [M, 2545, 1322, Q, 2516, 1300, 2507, 1300, 2481, 1300, 2450, 1307, 2413, 1316, 2413, 1329, 2415, 1342, 2415, 1347, 2471, 1346, 2482, 1349, 2495, 1353, 2495, 1390, 2495, 1396, 2498, 1395, L, 2558, 1395, Q, 2563, 1390, 2569, 1373, 2575, 1358, 2575, 1354, Q, 2575, 1345, 2545, 1322, Z]],\n      \"label\": \"Guadalcanal\",\n      \"shortLabel\": \"GC\",\n      \"labelPosition\": [243, 159.6],\n      \"labelAlignment\": [CEN, MID]\n    }\n  }\n}];\n\nexports['default'] = {\n  extension: geodefinitions,\n  name: 'solomonisland',\n  type: 'maps'\n};\n\n/***/ })\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// fusioncharts.solomonisland.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 563);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 39df072d133de9a1fe38","module.exports = FusionCharts;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"FusionCharts\"\n// module id = 0\n// module chunks = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327","import FusionCharts from 'FusionCharts';\nimport solomonisland from '../maps/fusioncharts.solomonisland';\n\nFusionCharts.addDep(solomonisland);\nFusionCharts.addFile('fusioncharts.solomonisland.js');\n\n\n// WEBPACK FOOTER //\n// ./source/wrappers/fusioncharts.solomonisland.js","/**!\n * @license FusionCharts JavaScript Library\n * Copyright FusionCharts Technologies LLP\n * License Information at <http://www.fusioncharts.com/license>\n *\n * @author FusionCharts Technologies LLP\n * @meta package_map_pack\n * @id fusionmaps.SolomonIsland.20.10-30-2012 07:04:41\n */\n\nlet M = 'M', // SVG MoveTo\n  L = 'L', // SVG LineTo\n  Z = 'Z', // SVG ClosePath\n  Q = 'Q', // SVG Quadratic Beizer\n  LFT = 'left',\n  RGT = 'right',\n  CEN = 'center',\n  MID = 'middle',\n  TOP = 'top',\n  BTM = 'bottom',\n  geodefinitions = [{\n  \"name\": \"SolomonIsland\",\n  \"revision\": 20,\n  \"standaloneInit\": true,\n  \"baseWidth\": 580,\n  \"baseHeight\": 276,\n  \"baseScaleFactor\": 10,\n  \"entities\": {\n    \"SB.CN\": {\n      \"outlines\": [\n        [M, 1980, 1305, Q, 1967, 1287, 1949, 1287, 1943, 1287, 1930, 1303, 1915, 1320, 1915, 1339, 1915, 1344, 1924, 1356, 1933, 1369, 1933, 1374, 1933, 1405, 1990, 1327, Q, 1990, 1318, 1980, 1305, Z]\n      ],\n      \"label\": \"Central\",\n      \"shortLabel\": \"CN\",\n      \"labelPosition\": [195.3, 153],\n      \"labelAlignment\": [CEN, BTM],\n      \"labelConnectors\": [\n        [M, 1953, 1530, L, 1953, 1335]\n      ]\n    },\n    \"SB.ML\": {\n      \"outlines\": [\n        [M, 3300, 1628, Q, 3298, 1629, 3293, 1645, 3298, 1645, 3303, 1647, 3303, 1654, 3297, 1663, 3290, 1672, 3290, 1682, 3290, 1702, 3326, 1717, 3350, 1717, 3350, 1683, 3350, 1627, 3315, 1627, Q, 3301, 1627, 3300, 1628, Z],\n        [M, 2663, 972, L, 2663, 1005, Q, 2693, 1030, 2701, 1039, 2713, 1053, 2713, 1086, 2703, 1120, 2703, 1147, 2703, 1176, 2697, 1192, 2690, 1209, 2690, 1216, 2692, 1222, 2692, 1225, L, 2708, 1225, Q, 2744, 1225, 2748, 1255, 2753, 1309, 2758, 1317, 2763, 1328, 2776, 1341, 2778, 1345, 2779, 1348, 2790, 1367, 2807, 1379, 2829, 1392, 2840, 1402, 2862, 1412, 2878, 1427, 2892, 1459, 2903, 1462, 2945, 1475, 2978, 1532, 3000, 1570, 3035, 1607, L, 3058, 1607, 3060, 1633, Q, 3061, 1650, 3075, 1655, 3117, 1667, 3123, 1667, 3138, 1667, 3138, 1651, 3138, 1627, 3118, 1589, 3096, 1547, 3093, 1533, L, 3093, 1532, 3093, 1532, Q, 3092, 1532, 3092, 1531, 3058, 1485, 3045, 1480, L, 3045, 1520, Q, 2976, 1493, 2985, 1437, 2990, 1410, 2980, 1384, 2974, 1369, 2960, 1340, 2951, 1309, 2905, 1255, 2898, 1243, 2866, 1223, 2840, 1206, 2840, 1186, 2840, 1177, 2850, 1163, 2860, 1149, 2860, 1127, 2860, 1109, 2788, 1037, 2786, 1034, 2767, 994, 2746, 957, 2735, 957, 2731, 963, 2725, 969, 2712, 980, 2702, 980, 2701, 980, 2680, 972, Z]\n      ],\n      \"label\": \"Malaita\",\n      \"shortLabel\": \"ML\",\n      \"labelPosition\": [325.6, 109.5],\n      \"labelAlignment\": [LFT, MID],\n      \"labelConnectors\": [\n        [M, 3256, 1095, L, 2761, 1095]\n      ]\n    },\n    \"SB.MK\": {\n      \"outlines\": [\n        [M, 2996, 1960, Q, 3031, 1957, 3033, 1957, 3060, 1957, 3066, 1959, 3090, 1964, 3099, 1986, 3113, 2016, 3115, 2043, 3116, 2063, 3124, 2072, 3128, 2077, 3144, 2087, 3149, 2102, 3164, 2103, 3183, 2103, 3192, 2113, 3236, 2161, 3283, 2161, 3333, 2161, 3342, 2165, 3355, 2171, 3368, 2175, 3376, 2178, 3387, 2188, 3405, 2196, 3410, 2196, 3414, 2196, 3439, 2185, 3443, 2183, 3466, 2181, 3469, 2180, 3477, 2165, 3479, 2164, 3489, 2147, 3485, 2128, 3485, 2120, 3474, 2122, 3462, 2103, 3440, 2068, 3438, 2065, 3427, 2045, 3418, 2031, 3400, 2006, 3378, 2006, 3366, 2014, 3357, 2013, L, 3329, 2013, Q, 3329, 2016, 3321, 2017, 3310, 2017, 3283, 2013, 3269, 2006, 3248, 1996, 3198, 1959, 3175, 1952, 3145, 1940, 3139, 1938, 3126, 1927, 3110, 1916, 3078, 1891, 3068, 1887, 3064, 1886, 3039, 1886, 3002, 1886, 2998, 1897, Q, 2995, 1907, 2996, 1960, Z]\n      ],\n      \"label\": \"Makira\",\n      \"shortLabel\": \"MK\",\n      \"labelPosition\": [366.6, 213],\n      \"labelAlignment\": [LFT, MID],\n      \"labelConnectors\": [\n        [M, 3666, 2130, L, 3371, 2130]\n      ]\n    },\n    \"SB.TE\": {\n      \"outlines\": [\n        [M, 5664, 2560, Q, 5625, 2560, 5625, 2575, 5625, 2592, 5675, 2625, 5673, 2625, 5673, 2627, L, 5720, 2627, 5720, 2607, Q, 5720, 2590, 5704, 2575, Q, 5687, 2560, 5664, 2560, Z],\n        [M, 5540, 2410, Q, 5533, 2407, 5509, 2407, 5489, 2407, 5485, 2410, 5478, 2414, 5478, 2436, 5478, 2449, 5499, 2465, 5522, 2482, 5543, 2472, 5543, 2465, 5549, 2453, 5555, 2441, 5555, 2435, Q, 5555, 2415, 5540, 2410, Z],\n        [M, 5348, 2145, L, 5348, 2117, Q, 5295, 2111, 5279, 2110, 5277, 2110, 5275, 2110, 5228, 2110, 5198, 2125, 5161, 2142, 5158, 2175, L, 5158, 2197, Q, 5200, 2212, 5209, 2213, 5230, 2215, 5230, 2193, 5225, 2185, 5225, 2178, 5225, 2164, 5277, 2157, Q, 5341, 2148, 5348, 2145, Z]\n      ],\n      \"label\": \"Temotu\",\n      \"shortLabel\": \"TE\",\n      \"labelPosition\": [522.7, 198],\n      \"labelAlignment\": [CEN, TOP],\n      \"labelConnectors\": [\n        [M, 5227, 1980, L, 5227, 2135]\n      ]\n    },\n    \"SB.RB\": {\n      \"outlines\": [\n        [M, 2383, 2538, Q, 2372, 2554, 2372, 2555, 2372, 2558, 2379, 2567, 2388, 2577, 2393, 2590, 2420, 2586, 2435, 2587, 2439, 2587, 2450, 2599, 2461, 2611, 2479, 2611, 2488, 2611, 2498, 2593, 2508, 2598, 2522, 2623, 2544, 2650, 2548, 2650, 2552, 2650, 2560, 2639, 2567, 2627, 2569, 2626, 2581, 2620, 2599, 2620, L, 2599, 2615, Q, 2562, 2588, 2557, 2587, 2541, 2583, 2504, 2563, 2481, 2555, 2391, 2522, Q, 2381, 2522, 2383, 2538, Z],\n        [M, 2262, 2443, Q, 2268, 2450, 2283, 2465, 2287, 2461, 2298, 2456, 2304, 2454, 2304, 2443, 2304, 2413, 2263, 2413, 2253, 2413, 2253, 2419, Q, 2253, 2432, 2262, 2443, Z]\n      ],\n      \"label\": \"Rennell and Bellona\",\n      \"shortLabel\": \"RB\",\n      \"labelPosition\": [277.1, 260.6],\n      \"labelAlignment\": [LFT, MID],\n      \"labelConnectors\": [\n        [M, 2771, 2606, L, 2546, 2606]\n      ]\n    },\n    \"SB.IS\": {\n      \"outlines\": [\n        [M, 2211, 1087, Q, 2222, 1082, 2238, 1082, L, 2238, 1056, Q, 2230, 1050, 2213, 1022, 2200, 1001, 2182, 1001, 2175, 1001, 2160, 1010, 2144, 1020, 2144, 1027, 2144, 1039, 2176, 1063, Q, 2202, 1081, 2211, 1087, Z],\n        [M, 1574, 591, L, 1580, 591, Q, 1582, 606, 1595, 628, 1598, 648, 1606, 648, 1624, 650, 1645, 650, 1666, 650, 1669, 640, 1677, 649, 1686, 651, 1692, 653, 1694, 660, 1694, 678, 1696, 688, 1699, 699, 1711, 707, 1713, 707, 1715, 707, 1737, 726, 1744, 731, 1768, 749, 1774, 758, 1778, 766, 1791, 774, 1803, 781, 1805, 783, L, 1828, 809, Q, 1845, 823, 1873, 834, 1912, 846, 1919, 850, 1988, 890, 2005, 905, 2042, 936, 2102, 953, 2125, 960, 2142, 968, 2167, 980, 2178, 981, 2181, 981, 2183, 981, 2205, 983, 2225, 1003, 2243, 1027, 2248, 1031, 2261, 1041, 2270, 1057, 2277, 1068, 2289, 1071, 2309, 1077, 2322, 1085, 2320, 1086, 2320, 1087, L, 2324, 1087, Q, 2326, 1076, 2332, 1069, 2332, 1055, 2310, 1031, 2308, 1028, 2293, 1026, 2283, 1024, 2280, 1005, 2281, 1002, 2292, 991, 2300, 982, 2300, 974, 2300, 966, 2187, 885, L, 2158, 863, Q, 2145, 854, 2137, 840, 2134, 835, 2107, 823, 2100, 821, 2072, 806, 2065, 805, 2058, 805, 2049, 804, 2024, 787, L, 1995, 767, Q, 1989, 763, 1950, 760, 1916, 749, 1908, 742, 1902, 736, 1890, 716, 1881, 703, 1839, 673, 1831, 664, 1802, 646, 1797, 642, 1786, 628, 1774, 616, 1759, 616, 1721, 615, 1702, 606, 1684, 597, 1665, 597, 1651, 598, 1640, 598, 1612, 598, 1607, 591, 1605, 589, 1605, 587, 1605, 584, 1612, 576, 1619, 569, 1619, 560, 1619, 543, 1561, 543, 1542, 544, 1542, 554, Q, 1542, 559, 1574, 591, Z]\n      ],\n      \"label\": \"Isabel\",\n      \"shortLabel\": \"IS\",\n      \"labelPosition\": [225.6, 73],\n      \"labelAlignment\": [LFT, MID],\n      \"labelConnectors\": [\n        [M, 2256, 730, L, 1821, 730]\n      ]\n    },\n    \"SB.WE\": {\n      \"outlines\": [\n        [M, 813, 840, Q, 798, 853, 798, 874, 798, 901, 832, 901, 865, 902, 865, 860, L, 865, 837, Q, 862, 827, 844, 827, Q, 827, 827, 813, 840, Z],\n        [M, 703, 850, Q, 700, 905, 720, 910, L, 718, 919, Q, 718, 921, 723, 925, 729, 930, 734, 930, 753, 930, 753, 894, 753, 858, 742, 825, 729, 788, 710, 783, Q, 703, 800, 703, 850, Z],\n        [M, 795, 633, Q, 753, 598, 735, 598, 683, 598, 683, 642, 683, 659, 697, 671, 697, 672, 725, 690, 759, 713, 747, 757, 768, 775, 777, 775, 790, 770, 798, 770, 791, 734, 812, 719, 835, 702, 835, 674, Q, 835, 666, 795, 633, Z],\n        [M, 1513, 1163, Q, 1490, 1163, 1490, 1204, 1490, 1215, 1515, 1218, 1540, 1221, 1540, 1203, Q, 1540, 1163, 1513, 1163, Z],\n        [M, 1175, 1151, Q, 1169, 1153, 1158, 1165, L, 1158, 1180, Q, 1165, 1180, 1186, 1192, 1208, 1204, 1222, 1207, L, 1223, 1205, Q, 1225, 1203, 1241, 1199, 1250, 1196, 1248, 1183, 1230, 1174, 1220, 1159, 1215, 1150, 1194, 1150, Q, 1178, 1150, 1175, 1151, Z],\n        [M, 1100, 1110, Q, 1102, 1092, 1128, 1060, 1128, 1033, 1115, 1010, L, 1093, 1010, Q, 1079, 1019, 1052, 1048, 1025, 1076, 1025, 1082, 1025, 1093, 1090, 1165, 1102, 1161, 1102, 1144, Q, 1102, 1134, 1100, 1110, Z],\n        [M, 1206, 814, Q, 1182, 800, 1154, 800, 1130, 800, 1122, 812, 1102, 840, 1088, 852, 1080, 887, 1068, 895, 1060, 900, 1037, 916, 1033, 906, 1028, 901, 1023, 896, 1008, 884, 1018, 879, 1026, 866, 1038, 844, 1038, 807, 1038, 737, 954, 737, 936, 737, 920, 757, 905, 777, 905, 800, 905, 834, 931, 844, 961, 855, 972, 881, 978, 883, 979, 883, L, 990, 895, 990, 907, 979, 908, 983, 908, Q, 967, 910, 938, 912, 939, 914, 960, 945, 973, 965, 994, 965, 1004, 965, 1004, 964, 1006, 961, 1013, 955, 1009, 951, 1006, 946, L, 1045, 945, 1048, 947, Q, 1050, 955, 1064, 965, 1077, 975, 1080, 975, 1090, 975, 1099, 954, 1108, 932, 1140, 932, 1181, 932, 1195, 940, 1220, 952, 1220, 994, 1215, 1014, 1215, 1020, 1215, 1038, 1225, 1052, 1236, 1067, 1250, 1067, L, 1298, 1067, Q, 1298, 1077, 1307, 1088, 1316, 1100, 1324, 1100, 1328, 1100, 1340, 1087, L, 1368, 1087, Q, 1360, 1103, 1360, 1119, 1360, 1144, 1380, 1165, 1400, 1185, 1420, 1185, 1443, 1185, 1448, 1177, 1455, 1170, 1458, 1165, 1466, 1156, 1465, 1147, 1465, 1122, 1474, 1102, 1483, 1081, 1483, 1080, L, 1475, 1060, Q, 1456, 1055, 1440, 1082, 1442, 1082, 1442, 1082, L, 1440, 1082, 1440, 1082, Q, 1433, 1080, 1412, 1067, 1405, 1067, 1398, 1077, L, 1365, 1077, Q, 1365, 1076, 1359, 1033, 1354, 1001, 1340, 985, 1333, 976, 1327, 962, 1323, 950, 1318, 947, 1292, 930, 1290, 915, L, 1263, 915, Q, 1228, 907, 1230, 850, Q, 1232, 829, 1206, 814, Z]\n      ],\n      \"label\": \"Western\",\n      \"shortLabel\": \"WE\",\n      \"labelPosition\": [107.1, 127.5],\n      \"labelAlignment\": [CEN, BTM],\n      \"labelConnectors\": [\n        [M, 1071, 1275, L, 1071, 1080]\n      ]\n    },\n    \"SB.CH\": {\n      \"outlines\": [\n        [M, 293, 351, Q, 293, 382, 320, 383, 360, 379, 385, 382, 385, 375, 388, 361, 388, 333, 379, 331, 356, 323, 338, 305, L, 310, 305, Q, 293, 322, 293, 351, Z],\n        [M, 238, 480, Q, 231, 480, 220, 487, 208, 496, 208, 505, 208, 514, 225, 525, 236, 532, 242, 536, 244, 538, 246, 539, 262, 537, 263, 535, 265, 533, 265, 510, 265, 490, 260, 485, Q, 256, 480, 238, 480, Z],\n        [M, 511, 229, Q, 507, 221, 488, 222, L, 475, 222, Q, 468, 246, 468, 302, 468, 309, 479, 318, 491, 328, 503, 322, 503, 285, 508, 276, 513, 268, 513, 250, Q, 513, 232, 511, 229, Z],\n        [M, 1255, 535, Q, 1285, 565, 1323, 565, L, 1323, 527, Q, 1316, 524, 1301, 521, 1286, 519, 1275, 512, L, 1263, 512, Q, 1263, 522, 1255, 535, Z],\n        [M, 958, 457, Q, 967, 458, 972, 469, 976, 480, 978, 482, 989, 493, 1018, 493, 1052, 492, 1058, 495, 1108, 527, 1124, 527, 1128, 527, 1160, 510, 1166, 507, 1171, 504, 1178, 525, 1227, 545, 1228, 543, 1229, 542, 1233, 538, 1233, 530, 1233, 515, 1220, 510, 1201, 503, 1195, 497, L, 1182, 497, Q, 1195, 488, 1195, 484, 1195, 480, 1193, 477, 1193, 476, 1193, 475, 1179, 477, 1166, 473, 1158, 471, 1140, 465, 1130, 463, 1107, 462, 1090, 460, 1088, 447, 1086, 437, 1052, 414, 1014, 388, 999, 357, 995, 351, 993, 345, 983, 319, 969, 283, 953, 258, 910, 242, 810, 207, 777, 165, 766, 152, 753, 148, 734, 142, 680, 142, 653, 142, 653, 151, 653, 168, 704, 212, 757, 254, 760, 257, 778, 272, 805, 312, 821, 352, 854, 386, 856, 388, 857, 389, 881, 400, 895, 421, 911, 445, 920, 450, Q, 932, 456, 958, 457, Z]\n      ],\n      \"label\": \"Choiseul\",\n      \"shortLabel\": \"CH\",\n      \"labelPosition\": [90.5, 12.5],\n      \"labelAlignment\": [CEN, TOP],\n      \"labelConnectors\": [\n        [M, 905, 125, L, 905, 348]\n      ]\n    },\n    \"SB.GC\": {\n      \"outlines\": [\n        [M, 2278, 1322, Q, 2243, 1322, 2243, 1345, 2243, 1361, 2284, 1377, 2325, 1393, 2325, 1364, Q, 2325, 1322, 2278, 1322, Z],\n        [M, 2570, 1520, Q, 2555, 1504, 2489, 1503, 2453, 1502, 2383, 1505, 2370, 1505, 2346, 1498, 2318, 1489, 2310, 1480, 2298, 1464, 2269, 1448, 2239, 1432, 2223, 1432, 2189, 1432, 2180, 1472, 2178, 1485, 2178, 1545, 2178, 1564, 2278, 1670, 2278, 1681, 2333, 1690, 2381, 1697, 2423, 1697, 2522, 1692, 2523, 1692, 2537, 1692, 2590, 1742, 2603, 1753, 2635, 1753, 2674, 1750, 2690, 1750, 2728, 1745, 2738, 1745, 2763, 1722, 2763, 1705, 2758, 1682, 2758, 1672, 2758, 1667, 2748, 1663, 2733, 1658, 2733, 1657, 2720, 1648, 2704, 1641, 2693, 1632, 2690, 1602, 2689, 1588, 2636, 1559, Q, 2575, 1524, 2570, 1520, Z],\n        [M, 2545, 1322, Q, 2516, 1300, 2507, 1300, 2481, 1300, 2450, 1307, 2413, 1316, 2413, 1329, 2415, 1342, 2415, 1347, 2471, 1346, 2482, 1349, 2495, 1353, 2495, 1390, 2495, 1396, 2498, 1395, L, 2558, 1395, Q, 2563, 1390, 2569, 1373, 2575, 1358, 2575, 1354, Q, 2575, 1345, 2545, 1322, Z]\n      ],\n      \"label\": \"Guadalcanal\",\n      \"shortLabel\": \"GC\",\n      \"labelPosition\": [243, 159.6],\n      \"labelAlignment\": [CEN, MID]\n    }\n  }\n}];\n\nexport default {\n  extension: geodefinitions,\n  name: 'solomonisland',\n  type: 'maps'\n};\n\n\n// WEBPACK FOOTER //\n// ./source/maps/fusioncharts.solomonisland.js"],"sourceRoot":""}